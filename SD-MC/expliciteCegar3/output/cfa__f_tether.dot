digraph f_tether {
10864 [shape="circle"]
10865 [shape="circle"]
10880 [shape="diamond"]
10881 [shape="circle"]
10882 [shape="circle"]
10884 [shape="doublecircle"]
10885 [shape="diamond"]
10887 [shape="circle"]
10888 [shape="circle"]
10890 [shape="circle"]
10891 [shape="diamond"]
10892 [shape="circle"]
10893 [shape="diamond"]
10896 [shape="circle"]
10895 [shape="circle"]
10894 [shape="circle"]
10903 [shape="diamond"]
10906 [shape="circle"]
10905 [shape="circle"]
10918 [shape="diamond"]
10919 [shape="circle"]
10920 [shape="circle"]
10922 [shape="circle"]
10908 [shape="circle"]
10863 [shape="circle"]
10865 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10865</td><td align="left">TETHER *bp;</td></tr><tr><td align="right">10867</td><td align="left">double r;</td></tr><tr><td align="right">10869</td><td align="left">double k;</td></tr><tr><td align="right">10871</td><td align="left">double ux;</td></tr><tr><td align="right">10873</td><td align="left">double uy;</td></tr><tr><td align="right">10875</td><td align="left">double uz;</td></tr><tr><td align="right">10877</td><td align="left">ATOM *a1;</td></tr><tr><td align="right">10879</td><td align="left">bp = tether_first;</td></tr></table>>]
10865 -> 10880[label=""]
10895 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10895</td><td align="left">ux = (a1-&gt;x) - (bp-&gt;x);</td></tr><tr><td align="right">10897</td><td align="left">uy = (a1-&gt;y) - (bp-&gt;y);</td></tr><tr><td align="right">10898</td><td align="left">uz = (a1-&gt;z) - (bp-&gt;z);</td></tr><tr><td align="right">10899</td><td align="left"></td></tr></table>>]
10895 -> 10894[label=""]
10908 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10908</td><td align="left">ux = ux / r;</td></tr><tr><td align="right">10909</td><td align="left">uy = uy / r;</td></tr><tr><td align="right">10910</td><td align="left">uz = uz / r;</td></tr><tr><td align="right">10911</td><td align="left"></td></tr><tr><td align="right">10904</td><td align="left">ux = ((((double)2) * k) * r) * ux;</td></tr><tr><td align="right">10912</td><td align="left">uy = ((((double)2) * k) * r) * uy;</td></tr><tr><td align="right">10913</td><td align="left">uz = ((((double)2) * k) * r) * uz;</td></tr><tr><td align="right">10914</td><td align="left">a1-&gt;fx = (a1-&gt;fx) - ux;</td></tr><tr><td align="right">10915</td><td align="left">a1-&gt;fy = (a1-&gt;fy) - uy;</td></tr><tr><td align="right">10916</td><td align="left">a1-&gt;fz = (a1-&gt;fz) - uz;</td></tr><tr><td align="right">10917</td><td align="left"></td></tr></table>>]
10908 -> 10892[label=""]
10896 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10896</td><td align="left">ux = ((a1-&gt;x) - (bp-&gt;x)) + (lambda * (a1-&gt;dx));</td></tr><tr><td align="right">10900</td><td align="left">uy = ((a1-&gt;y) - (bp-&gt;y)) + (lambda * (a1-&gt;dy));</td></tr><tr><td align="right">10901</td><td align="left">uz = ((a1-&gt;z) - (bp-&gt;z)) + (lambda * (a1-&gt;dz));</td></tr><tr><td align="right">10902</td><td align="left"></td></tr></table>>]
10896 -> 10894[label=""]
10864 -> 10865 [label="Function start dummy edge" fontname="Courier New"]
10880 -> 10881 [label="[!(((unsigned int)bp) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
10880 -> 10882 [label="[((unsigned int)bp) == ((unsigned int)((void *)0))]" fontname="Courier New"]
10881 -> 10884 [label="while" fontname="Courier New"]
10884 -> 10885 [label="" fontname="Courier New"]
10885 -> 10887 [label="[!(((unsigned int)bp) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
10885 -> 10888 [label="[((unsigned int)bp) == ((unsigned int)((void *)0))]" fontname="Courier New"]
10887 -> 10890 [label="k = bp->k;" fontname="Courier New"]
10891 -> 10892 [label="[!((a1->active) != 0)]" fontname="Courier New"]
10891 -> 10893 [label="[(a1->active) != 0]" fontname="Courier New"]
10893 -> 10896 [label="[!(lambda == 0)]" fontname="Courier New"]
10893 -> 10895 [label="[lambda == 0]" fontname="Courier New"]
10894 -> 10903 [label="r = ((ux * ux) + (uy * uy)) + (uz * uz);" fontname="Courier New"]
10903 -> 10906 [label="[!(r <= 0.00001)]" fontname="Courier New"]
10903 -> 10905 [label="[r <= 0.00001]" fontname="Courier New"]
10918 -> 10919 [label="[!(((unsigned int)bp) == ((unsigned int)(bp->next)))]" fontname="Courier New"]
10918 -> 10920 [label="[((unsigned int)bp) == ((unsigned int)(bp->next))]" fontname="Courier New"]
10919 -> 10922 [label="bp = (TETHER *)(bp->next);" fontname="Courier New"]
10906 -> 10908 [label="r = sqrt(r);" fontname="Courier New"]
10892 -> 10918 [label="Label: SKIP" fontname="Courier New"]
10882 -> 10863 [label="return 1;" fontname="Courier New"]
10888 -> 10863 [label="return 0;" fontname="Courier New"]
10890 -> 10891 [label="a1 = bp->atom1;" fontname="Courier New"]
10905 -> 10918 [label="Goto: SKIP" fontname="Courier New"]
10920 -> 10863 [label="return 1;" fontname="Courier New"]
10922 -> 10884 [label="" fontname="Courier New"]
}