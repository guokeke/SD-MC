digraph gen_bitlen {
6818 [shape="circle"]
6819 [shape="circle"]
6854 [shape="doublecircle"]
6856 [shape="circle"]
6855 [shape="circle"]
6859 [shape="circle"]
6861 [shape="doublecircle"]
6863 [shape="diamond"]
6862 [shape="circle"]
6865 [shape="diamond"]
6866 [shape="circle"]
6867 [shape="circle"]
6870 [shape="diamond"]
6871 [shape="circle"]
6872 [shape="circle"]
6884 [shape="circle"]
6885 [shape="circle"]
6874 [shape="circle"]
6875 [shape="diamond"]
6876 [shape="circle"]
6877 [shape="circle"]
6879 [shape="circle"]
6880 [shape="diamond"]
6881 [shape="circle"]
6882 [shape="circle"]
6886 [shape="circle"]
6887 [shape="circle"]
6889 [shape="doublecircle"]
6890 [shape="circle"]
6893 [shape="doublecircle"]
6895 [shape="circle"]
6894 [shape="circle"]
6897 [shape="circle"]
6900 [shape="diamond"]
6901 [shape="circle"]
6902 [shape="circle"]
6905 [shape="doublecircle"]
6907 [shape="circle"]
6906 [shape="circle"]
6909 [shape="doublecircle"]
6911 [shape="circle"]
6910 [shape="circle"]
6913 [shape="diamond"]
6914 [shape="diamond"]
6915 [shape="circle"]
6917 [shape="circle"]
6918 [shape="circle"]
6921 [shape="circle"]
6922 [shape="circle"]
6817 [shape="circle"]
6819 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 6819 and 6853"]
6819 -> 6854[label=""]
6855 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6855</td><td align="left">bl_count[bits] = (unsigned short)0;</td></tr><tr><td align="right">6857</td><td align="left">bits = bits + 1;</td></tr><tr><td align="right">6858</td><td align="left"></td></tr></table>>]
6855 -> 6854[label=""]
6859 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6859</td><td align="left">h = heap_max + 1;</td></tr><tr><td align="right">6860</td><td align="left">while</td></tr></table>>]
6859 -> 6861[label=""]
6862 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6862</td><td align="left">n = heap[h];</td></tr><tr><td align="right">6864</td><td align="left">bits = ((int)((tree + ((tree + n)-&gt;dl.dad))-&gt;dl.len)) + 1;</td></tr></table>>]
6862 -> 6865[label=""]
6867 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6867</td><td align="left">bits = max_length;</td></tr><tr><td align="right">6868</td><td align="left">overflow = overflow + 1;</td></tr><tr><td align="right">6869</td><td align="left"></td></tr></table>>]
6867 -> 6866[label=""]
6877 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6877</td><td align="left">xbits = *(extra + (n - base));</td></tr><tr><td align="right">6878</td><td align="left"></td></tr></table>>]
6877 -> 6876[label=""]
6882 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6882</td><td align="left">static_len = static_len + (((unsigned long)f) * ((unsigned long)(((int)((stree + n)-&gt;dl.len)) + xbits)));</td></tr><tr><td align="right">6883</td><td align="left"></td></tr></table>>]
6882 -> 6881[label=""]
6890 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6890</td><td align="left">bits = max_length - 1;</td></tr><tr><td align="right">6892</td><td align="left">while</td></tr></table>>]
6890 -> 6893[label=""]
6894 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6894</td><td align="left">bits = bits - 1;</td></tr><tr><td align="right">6896</td><td align="left"></td></tr></table>>]
6894 -> 6893[label=""]
6897 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6897</td><td align="left">bl_count[bits + 1] = (unsigned short)(((int)(bl_count[bits + 1])) + 2);</td></tr><tr><td align="right">6898</td><td align="left">bl_count[max_length] = (ush )(((int)(bl_count[max_length])) - 1);</td></tr><tr><td align="right">6899</td><td align="left">overflow = overflow - 2;</td></tr></table>>]
6897 -> 6900[label=""]
6902 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6902</td><td align="left">break</td></tr><tr><td align="right">6891</td><td align="left">bits = max_length;</td></tr><tr><td align="right">6904</td><td align="left">while</td></tr></table>>]
6902 -> 6905[label=""]
6906 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6906</td><td align="left">n = (int)(bl_count[bits]);</td></tr><tr><td align="right">6908</td><td align="left">while</td></tr></table>>]
6906 -> 6909[label=""]
6910 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6910</td><td align="left">h = h - 1;</td></tr><tr><td align="right">6912</td><td align="left">m = heap[h];</td></tr></table>>]
6910 -> 6913[label=""]
6918 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6918</td><td align="left">opt_len = opt_len + ((ulg )((((long)bits) - ((long)((tree + m)-&gt;dl.len))) * ((long)((tree + m)-&gt;fc.freq))));</td></tr><tr><td align="right">6919</td><td align="left">(tree + m)-&gt;dl.len = (unsigned short)bits;</td></tr><tr><td align="right">6920</td><td align="left"></td></tr></table>>]
6918 -> 6917[label=""]
6818 -> 6819 [label="Function start dummy edge" fontname="Courier New"]
6854 -> 6856 [label="[!(bits <= 15)]" fontname="Courier New"]
6854 -> 6855 [label="[bits <= 15]" fontname="Courier New"]
6856 -> 6859 [label="(tree + (heap[heap_max]))->dl.len = (unsigned short)0;" fontname="Courier New"]
6861 -> 6863 [label="[!(h < 573)]" fontname="Courier New"]
6861 -> 6862 [label="[h < 573]" fontname="Courier New"]
6865 -> 6866 [label="[!(bits > max_length)]" fontname="Courier New"]
6865 -> 6867 [label="[bits > max_length]" fontname="Courier New"]
6866 -> 6870 [label="(tree + n)->dl.len = (unsigned short)bits;" fontname="Courier New"]
6870 -> 6871 [label="[!(n > max_code)]" fontname="Courier New"]
6870 -> 6872 [label="[n > max_code]" fontname="Courier New"]
6884 -> 6885 [label="h = h + 1;" fontname="Courier New"]
6871 -> 6874 [label="bl_count[bits] = (ush )(((int)(bl_count[bits])) + 1);" fontname="Courier New"]
6875 -> 6876 [label="[!(n >= base)]" fontname="Courier New"]
6875 -> 6877 [label="[n >= base]" fontname="Courier New"]
6876 -> 6879 [label="f = (tree + n)->fc.freq;" fontname="Courier New"]
6880 -> 6881 [label="[!(stree != 0)]" fontname="Courier New"]
6880 -> 6882 [label="[stree != 0]" fontname="Courier New"]
6881 -> 6884 [label="Label: __Cont" fontname="Courier New"]
6863 -> 6886 [label="[!(overflow == 0)]" fontname="Courier New"]
6863 -> 6887 [label="[overflow == 0]" fontname="Courier New"]
6886 -> 6889 [label="while" fontname="Courier New"]
6889 -> 6890 [label="" fontname="Courier New"]
6893 -> 6895 [label="[!(((int)(bl_count[bits])) == 0)]" fontname="Courier New"]
6893 -> 6894 [label="[((int)(bl_count[bits])) == 0]" fontname="Courier New"]
6895 -> 6897 [label="bl_count[bits] = (ush )(((int)(bl_count[bits])) - 1);" fontname="Courier New"]
6900 -> 6901 [label="[!(!(overflow > 0))]" fontname="Courier New"]
6900 -> 6902 [label="[!(overflow > 0)]" fontname="Courier New"]
6905 -> 6907 [label="[!(bits != 0)]" fontname="Courier New"]
6905 -> 6906 [label="[bits != 0]" fontname="Courier New"]
6909 -> 6911 [label="[!(n != 0)]" fontname="Courier New"]
6909 -> 6910 [label="[n != 0]" fontname="Courier New"]
6913 -> 6914 [label="[!(m > max_code)]" fontname="Courier New"]
6913 -> 6915 [label="[m > max_code]" fontname="Courier New"]
6914 -> 6917 [label="[!(((unsigned int)((tree + m)->dl.len)) != ((unsigned int)bits))]" fontname="Courier New"]
6914 -> 6918 [label="[((unsigned int)((tree + m)->dl.len)) != ((unsigned int)bits)]" fontname="Courier New"]
6917 -> 6921 [label="n = n - 1;" fontname="Courier New"]
6911 -> 6922 [label="bits = bits - 1;" fontname="Courier New"]
6907 -> 6817 [label="return;" fontname="Courier New"]
6872 -> 6884 [label="Goto: __Cont" fontname="Courier New"]
6885 -> 6861 [label="" fontname="Courier New"]
6874 -> 6875 [label="xbits = 0;" fontname="Courier New"]
6879 -> 6880 [label="opt_len = opt_len + (((unsigned long)f) * ((unsigned long)(bits + xbits)));" fontname="Courier New"]
6887 -> 6817 [label="return;" fontname="Courier New"]
6915 -> 6909 [label="continue" fontname="Courier New"]
6921 -> 6909 [label="" fontname="Courier New"]
6922 -> 6905 [label="" fontname="Courier New"]
6901 -> 6889 [label="" fontname="Courier New"]
}