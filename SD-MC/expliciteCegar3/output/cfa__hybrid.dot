digraph hybrid {
6333 [shape="circle"]
6334 [shape="circle"]
6335 [shape="circle"]
6336 [shape="circle"]
6337 [shape="diamond"]
6340 [shape="diamond"]
6339 [shape="circle"]
6341 [shape="circle"]
6342 [shape="circle"]
6346 [shape="diamond"]
6345 [shape="circle"]
6347 [shape="circle"]
6348 [shape="circle"]
6352 [shape="diamond"]
6351 [shape="circle"]
6353 [shape="circle"]
6354 [shape="circle"]
6356 [shape="circle"]
6357 [shape="circle"]
6358 [shape="circle"]
6359 [shape="circle"]
6338 [shape="circle"]
6362 [shape="diamond"]
6363 [shape="diamond"]
6364 [shape="circle"]
6366 [shape="diamond"]
6367 [shape="circle"]
6369 [shape="circle"]
6370 [shape="circle"]
6372 [shape="circle"]
6317 [shape="circle"]
6318 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6318</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">6319</td><td align="left">HYBRID *new;</td></tr><tr><td align="right">6321</td><td align="left">ATOM *ap1;</td></tr><tr><td align="right">6323</td><td align="left">ATOM *ap2;</td></tr><tr><td align="right">6325</td><td align="left">ATOM *ap3;</td></tr><tr><td align="right">6327</td><td align="left">ATOM *ap4;</td></tr><tr><td align="right">6329</td><td align="left">char line[80];</td></tr><tr><td align="right">6331</td><td align="left">void *tmp;</td></tr></table>>]
6318 -> 6333[label=""]
6338 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6338</td><td align="left">tmp = malloc(sizeof(HYBRID ));</td></tr><tr><td align="right">6361</td><td align="left">new = (HYBRID *)tmp;</td></tr></table>>]
6338 -> 6362[label=""]
6367 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6367</td><td align="left">hybrid_first = new;</td></tr><tr><td align="right">6368</td><td align="left"></td></tr></table>>]
6367 -> 6366[label=""]
6370 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6370</td><td align="left">hybrid_last = new;</td></tr><tr><td align="right">6371</td><td align="left"></td></tr></table>>]
6370 -> 6369[label=""]
6372 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6372</td><td align="left">new-&gt;atom2 = ap2;</td></tr><tr><td align="right">6373</td><td align="left">new-&gt;atom3 = ap3;</td></tr><tr><td align="right">6374</td><td align="left">new-&gt;atom4 = ap4;</td></tr><tr><td align="right">6375</td><td align="left">new-&gt;offset = off;</td></tr><tr><td align="right">6376</td><td align="left">new-&gt;k = fk;</td></tr><tr><td align="right">6377</td><td align="left">new-&gt;next = (void *)new;</td></tr><tr><td align="right">6378</td><td align="left">hybrid_last-&gt;next = (void *)new;</td></tr><tr><td align="right">6379</td><td align="left">hybrid_last = new;</td></tr><tr><td align="right">6380</td><td align="left">return 1;</td></tr></table>>]
6372 -> 6317[label=""]
100550 [shape="component" label="a_m_serial"]
6333 -> 100550 [label="ap1 = a_m_serial(p1);" fontname="Courier New"]
100550 -> 6334 [label="" fontname="Courier New"]
100551 [shape="component" label="a_m_serial"]
6334 -> 100551 [label="ap2 = a_m_serial(p2);" fontname="Courier New"]
100551 -> 6335 [label="" fontname="Courier New"]
100552 [shape="component" label="a_m_serial"]
6335 -> 100552 [label="ap3 = a_m_serial(p3);" fontname="Courier New"]
100552 -> 6336 [label="" fontname="Courier New"]
100553 [shape="component" label="a_m_serial"]
6336 -> 100553 [label="ap4 = a_m_serial(p4);" fontname="Courier New"]
100553 -> 6337 [label="" fontname="Courier New"]
6337 -> 6340 [label="[!(((unsigned int)ap1) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6337 -> 6339 [label="[((unsigned int)ap1) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100554 [shape="component" label="aaerror"]
6341 -> 100554 [label="aaerror(line);" fontname="Courier New"]
100554 -> 6342 [label="" fontname="Courier New"]
6340 -> 6346 [label="[!(((unsigned int)ap2) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6340 -> 6345 [label="[((unsigned int)ap2) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100555 [shape="component" label="aaerror"]
6347 -> 100555 [label="aaerror(line);" fontname="Courier New"]
100555 -> 6348 [label="" fontname="Courier New"]
6346 -> 6352 [label="[!(((unsigned int)ap3) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6346 -> 6351 [label="[((unsigned int)ap3) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100556 [shape="component" label="aaerror"]
6353 -> 100556 [label="aaerror(line);" fontname="Courier New"]
100556 -> 6354 [label="" fontname="Courier New"]
6352 -> 6356 [label="[!(((unsigned int)ap4) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6352 -> 6357 [label="[((unsigned int)ap4) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100557 [shape="component" label="aaerror"]
6358 -> 100557 [label="aaerror(line);" fontname="Courier New"]
100557 -> 6359 [label="" fontname="Courier New"]
6356 -> 6338 [label="" fontname="Courier New"]
6362 -> 6363 [label="[!(((unsigned int)new) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6362 -> 6364 [label="[((unsigned int)new) == ((unsigned int)((void *)0))]" fontname="Courier New"]
6363 -> 6366 [label="[!(((unsigned int)hybrid_first) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6363 -> 6367 [label="[((unsigned int)hybrid_first) == ((unsigned int)((void *)0))]" fontname="Courier New"]
6366 -> 6369 [label="[!(((unsigned int)hybrid_last) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
6366 -> 6370 [label="[((unsigned int)hybrid_last) == ((unsigned int)((void *)0))]" fontname="Courier New"]
6369 -> 6372 [label="new->atom1 = ap1;" fontname="Courier New"]
6339 -> 6341 [label="sprintf(line, \"undefined atom in hybrid %d %d %d %d \000\", p1, p2, p3, p4);" fontname="Courier New"]
6342 -> 6317 [label="return 0;" fontname="Courier New"]
6345 -> 6347 [label="sprintf(line, \"undefined atom in hybrid %d %d %d %d \000\", p1, p2, p3, p4);" fontname="Courier New"]
6348 -> 6317 [label="return 0;" fontname="Courier New"]
6351 -> 6353 [label="sprintf(line, \"undefined atom in hybrid %d %d %d %d \000\", p1, p2, p3, p4);" fontname="Courier New"]
6354 -> 6317 [label="return 0;" fontname="Courier New"]
6357 -> 6358 [label="sprintf(line, \"undefined atom in hybrid %d %d %d %d \000\", p1, p2, p3, p4);" fontname="Courier New"]
6359 -> 6317 [label="return 0;" fontname="Courier New"]
6364 -> 6317 [label="return 0;" fontname="Courier New"]
}