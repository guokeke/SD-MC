digraph refresh_potential {
304 [shape="circle"]
305 [shape="circle"]
317 [shape="doublecircle"]
320 [shape="circle"]
319 [shape="circle"]
322 [shape="circle"]
325 [shape="doublecircle"]
327 [shape="circle"]
326 [shape="circle"]
328 [shape="doublecircle"]
330 [shape="circle"]
329 [shape="diamond"]
333 [shape="circle"]
332 [shape="circle"]
331 [shape="circle"]
337 [shape="circle"]
335 [shape="circle"]
339 [shape="circle"]
340 [shape="doublecircle"]
342 [shape="circle"]
341 [shape="circle"]
343 [shape="diamond"]
346 [shape="circle"]
345 [shape="circle"]
303 [shape="circle"]
305 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">305</td><td align="left">node_t *stop = net-&gt;stop_nodes;</td></tr><tr><td align="right">307</td><td align="left">node_t *node;</td></tr><tr><td align="right">309</td><td align="left">node_t *tmp;</td></tr><tr><td align="right">310</td><td align="left">node_t *root = net-&gt;nodes;</td></tr><tr><td align="right">312</td><td align="left">long checksum = 0;</td></tr><tr><td align="right">314</td><td align="left">for</td></tr><tr><td align="right">315</td><td align="left">node = root;</td></tr><tr><td align="right">316</td><td align="left">stop = net-&gt;stop_nodes;</td></tr></table>>]
305 -> 317[label=""]
319 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">319</td><td align="left">node-&gt;mark = 0;</td></tr><tr><td align="right">321</td><td align="left"></td></tr><tr><td align="right">318</td><td align="left">node = node + 1;</td></tr></table>>]
319 -> 317[label=""]
322 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">322</td><td align="left">node = root-&gt;child;</td></tr><tr><td align="right">324</td><td align="left">tmp = node;</td></tr><tr><td align="right">323</td><td align="left">while</td></tr></table>>]
322 -> 325[label=""]
332 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">332</td><td align="left">node-&gt;potential = (node-&gt;basic_arc-&gt;cost) + (node-&gt;pred-&gt;potential);</td></tr><tr><td align="right">334</td><td align="left"></td></tr></table>>]
332 -> 331[label=""]
337 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">337</td><td align="left">node = node-&gt;child;</td></tr><tr><td align="right">338</td><td align="left"></td></tr></table>>]
337 -> 328[label=""]
335 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">335</td><td align="left">checksum = checksum + 1L;</td></tr><tr><td align="right">336</td><td align="left"></td></tr></table>>]
335 -> 331[label=""]
345 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">345</td><td align="left">node = tmp;</td></tr><tr><td align="right">347</td><td align="left">break</td></tr></table>>]
345 -> 342[label=""]
346 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">346</td><td align="left">node = node-&gt;pred;</td></tr><tr><td align="right">349</td><td align="left"></td></tr><tr><td align="right">344</td><td align="left"></td></tr></table>>]
346 -> 340[label=""]
304 -> 305 [label="Function start dummy edge" fontname="Courier New"]
317 -> 320 [label="[!(node < ((node_t *)stop))]" fontname="Courier New"]
317 -> 319 [label="[node < ((node_t *)stop)]" fontname="Courier New"]
320 -> 322 [label="root->potential = (cost_t )(-((long)100000000L));" fontname="Courier New"]
325 -> 327 [label="[!(node != root)]" fontname="Courier New"]
325 -> 326 [label="[node != root]" fontname="Courier New"]
328 -> 330 [label="[!(node != 0)]" fontname="Courier New"]
328 -> 329 [label="[node != 0]" fontname="Courier New"]
329 -> 333 [label="[!((node->orientation) == 1)]" fontname="Courier New"]
329 -> 332 [label="[(node->orientation) == 1]" fontname="Courier New"]
331 -> 337 [label="tmp = node;" fontname="Courier New"]
333 -> 335 [label="node->potential = (node->pred->potential) - (node->basic_arc->cost);" fontname="Courier New"]
330 -> 339 [label="node = tmp;" fontname="Courier New"]
340 -> 342 [label="[!((node->pred) != 0)]" fontname="Courier New"]
340 -> 341 [label="[(node->pred) != 0]" fontname="Courier New"]
343 -> 346 [label="[!(tmp != 0)]" fontname="Courier New"]
343 -> 345 [label="[tmp != 0]" fontname="Courier New"]
342 -> 325 [label="" fontname="Courier New"]
327 -> 303 [label="return checksum;" fontname="Courier New"]
326 -> 328 [label="while" fontname="Courier New"]
339 -> 340 [label="while" fontname="Courier New"]
341 -> 343 [label="tmp = node->sibling;" fontname="Courier New"]
}