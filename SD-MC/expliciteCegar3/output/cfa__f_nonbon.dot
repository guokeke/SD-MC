digraph f_nonbon {
14548 [shape="circle"]
14549 [shape="circle"]
14591 [shape="circle"]
14592 [shape="circle"]
14593 [shape="diamond"]
14594 [shape="circle"]
14595 [shape="circle"]
14597 [shape="circle"]
14598 [shape="circle"]
14600 [shape="diamond"]
14601 [shape="circle"]
14602 [shape="circle"]
14603 [shape="circle"]
14605 [shape="circle"]
14607 [shape="doublecircle"]
14609 [shape="circle"]
14608 [shape="circle"]
14610 [shape="circle"]
14612 [shape="circle"]
14613 [shape="doublecircle"]
14615 [shape="circle"]
14614 [shape="circle"]
14630 [shape="doublecircle"]
14632 [shape="circle"]
14631 [shape="diamond"]
14633 [shape="circle"]
14634 [shape="circle"]
14637 [shape="circle"]
14638 [shape="doublecircle"]
14640 [shape="circle"]
14639 [shape="circle"]
14661 [shape="circle"]
14636 [shape="circle"]
14662 [shape="circle"]
14547 [shape="circle"]
14549 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 14549 and 14589"]
14549 -> 14591[label=""]
14595 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14595</td><td align="left">dielectric = 1;</td></tr><tr><td align="right">14596</td><td align="left"></td></tr></table>>]
14595 -> 14594[label=""]
14598 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14598</td><td align="left">tmp = malloc(((unsigned int)i) * (sizeof(ATOM *)));</td></tr><tr><td align="right">14599</td><td align="left">atomall = (ATOM *(*)[])tmp;</td></tr></table>>]
14598 -> 14600[label=""]
14605 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14605</td><td align="left">i = 0;</td></tr><tr><td align="right">14606</td><td align="left">while</td></tr></table>>]
14605 -> 14607[label=""]
14610 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14610</td><td align="left">i = i + 1;</td></tr><tr><td align="right">14611</td><td align="left"></td></tr></table>>]
14610 -> 14607[label=""]
14614 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14614</td><td align="left">fx___0 = 0;</td></tr><tr><td align="right">14616</td><td align="left">fy___0 = 0;</td></tr><tr><td align="right">14617</td><td align="left">fz___0 = 0;</td></tr><tr><td align="right">14618</td><td align="left">a1 = (*atomall)[i];</td></tr><tr><td align="right">14619</td><td align="left">xt = (((a1-&gt;dx) * lambda) + (a1-&gt;x)) - (a1-&gt;px);</td></tr><tr><td align="right">14620</td><td align="left">yt = (((a1-&gt;dy) * lambda) + (a1-&gt;y)) - (a1-&gt;py);</td></tr><tr><td align="right">14621</td><td align="left">zt = (((a1-&gt;dz) * lambda) + (a1-&gt;z)) - (a1-&gt;pz);</td></tr><tr><td align="right">14622</td><td align="left">fx___0 = (((a1-&gt;qxx) * xt) + ((a1-&gt;qxy) * yt)) + ((a1-&gt;qxz) * zt);</td></tr><tr><td align="right">14623</td><td align="left">fy___0 = (((a1-&gt;qxy) * xt) + ((a1-&gt;qyy) * yt)) + ((a1-&gt;qyz) * zt);</td></tr><tr><td align="right">14624</td><td align="left">fz___0 = (((a1-&gt;qxz) * xt) + ((a1-&gt;qyz) * yt)) + ((a1-&gt;qzz) * zt);</td></tr><tr><td align="right">14625</td><td align="left">a1-&gt;fx = (a1-&gt;fx) + (fx___0 + (a1-&gt;dpx));</td></tr><tr><td align="right">14626</td><td align="left">a1-&gt;fy = (a1-&gt;fy) + (fy___0 + (a1-&gt;dpy));</td></tr><tr><td align="right">14627</td><td align="left">a1-&gt;fz = (a1-&gt;fz) + (fz___0 + (a1-&gt;dpz));</td></tr><tr><td align="right">14628</td><td align="left">jj = 0;</td></tr><tr><td align="right">14629</td><td align="left">while</td></tr></table>>]
14614 -> 14630[label=""]
14639 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 14639 and 14660"]
14639 -> 14638[label=""]
14662 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14662</td><td align="left">free((void *)atomall);</td></tr><tr><td align="right">14663</td><td align="left">return 1;</td></tr></table>>]
14662 -> 14547[label=""]
14548 -> 14549 [label="Function start dummy edge" fontname="Courier New"]
100649 [shape="component" label="fv_update_nonbon"]
14591 -> 100649 [label="fv_update_nonbon(lambda);" fontname="Courier New"]
100649 -> 14592 [label="" fontname="Courier New"]
100650 [shape="component" label="get_f_variable"]
14592 -> 100650 [label="dielectric = get_f_variable((char *)\"dielec\");" fontname="Courier New"]
100650 -> 14593 [label="" fontname="Courier New"]
14593 -> 14594 [label="[!(dielectric < 1)]" fontname="Courier New"]
14593 -> 14595 [label="[dielectric < 1]" fontname="Courier New"]
14594 -> 14597 [label="dielectric = 332.17752 / dielectric;" fontname="Courier New"]
100651 [shape="component" label="a_number"]
14597 -> 100651 [label="i = a_number();" fontname="Courier New"]
100651 -> 14598 [label="" fontname="Courier New"]
14600 -> 14601 [label="[!(((unsigned int)atomall) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
14600 -> 14602 [label="[((unsigned int)atomall) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100652 [shape="component" label="aaerror"]
14602 -> 100652 [label="aaerror((char *)\"cannot allocate memory in f_nonbon\");" fontname="Courier New"]
100652 -> 14603 [label="" fontname="Courier New"]
100653 [shape="component" label="a_number"]
14601 -> 100653 [label="imax = a_number();" fontname="Courier New"]
100653 -> 14605 [label="" fontname="Courier New"]
14607 -> 14609 [label="[!(i < imax)]" fontname="Courier New"]
14607 -> 14608 [label="[i < imax]" fontname="Courier New"]
100654 [shape="component" label="a_next"]
14608 -> 100654 [label="(*atomall)[i] = a_next(i);" fontname="Courier New"]
100654 -> 14610 [label="" fontname="Courier New"]
14609 -> 14612 [label="i = 0;" fontname="Courier New"]
14613 -> 14615 [label="[!(i < imax)]" fontname="Courier New"]
14613 -> 14614 [label="[i < imax]" fontname="Courier New"]
14630 -> 14632 [label="[!(jj < 200)]" fontname="Courier New"]
14630 -> 14631 [label="[jj < 200]" fontname="Courier New"]
14631 -> 14633 [label="[!(((unsigned int)((a1->close)[jj])) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
14631 -> 14634 [label="[((unsigned int)((a1->close)[jj])) == ((unsigned int)((void *)0))]" fontname="Courier New"]
14632 -> 14637 [label="ii = 0;" fontname="Courier New"]
14638 -> 14640 [label="[!(ii < jj)]" fontname="Courier New"]
14638 -> 14639 [label="[ii < jj]" fontname="Courier New"]
14640 -> 14661 [label="i = i + 1;" fontname="Courier New"]
14633 -> 14636 [label="jj = jj + 1;" fontname="Courier New"]
100655 [shape="component" label="a_inactive_f_zero"]
14615 -> 100655 [label="a_inactive_f_zero();" fontname="Courier New"]
100655 -> 14662 [label="" fontname="Courier New"]
14603 -> 14547 [label="return 0;" fontname="Courier New"]
14612 -> 14613 [label="while" fontname="Courier New"]
14634 -> 14632 [label="break" fontname="Courier New"]
14637 -> 14638 [label="while" fontname="Courier New"]
14661 -> 14613 [label="" fontname="Courier New"]
14636 -> 14630 [label="" fontname="Courier New"]
}