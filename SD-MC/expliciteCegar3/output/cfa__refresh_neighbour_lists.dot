digraph refresh_neighbour_lists {
276 [shape="circle"]
277 [shape="circle"]
286 [shape="doublecircle"]
289 [shape="circle"]
288 [shape="circle"]
292 [shape="circle"]
294 [shape="doublecircle"]
297 [shape="circle"]
296 [shape="circle"]
275 [shape="circle"]
277 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">277</td><td align="left">node_t *node;</td></tr><tr><td align="right">279</td><td align="left">arc_t *arc;</td></tr><tr><td align="right">281</td><td align="left">void *stop;</td></tr><tr><td align="right">283</td><td align="left">node = net-&gt;nodes;</td></tr><tr><td align="right">284</td><td align="left">for</td></tr><tr><td align="right">285</td><td align="left">stop = (void *)(net-&gt;stop_nodes);</td></tr></table>>]
277 -> 286[label=""]
288 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">288</td><td align="left">node-&gt;firstin = (arc_t *)0;</td></tr><tr><td align="right">290</td><td align="left">node-&gt;firstout = (arc_t *)0;</td></tr><tr><td align="right">291</td><td align="left"></td></tr><tr><td align="right">287</td><td align="left">node = node + 1;</td></tr></table>>]
288 -> 286[label=""]
292 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">292</td><td align="left">for</td></tr><tr><td align="right">293</td><td align="left">stop = (void *)(net-&gt;stop_arcs);</td></tr></table>>]
292 -> 294[label=""]
296 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">296</td><td align="left">arc-&gt;nextout = arc-&gt;tail-&gt;firstout;</td></tr><tr><td align="right">298</td><td align="left">arc-&gt;tail-&gt;firstout = arc;</td></tr><tr><td align="right">299</td><td align="left">arc-&gt;nextin = arc-&gt;head-&gt;firstin;</td></tr><tr><td align="right">300</td><td align="left">arc-&gt;head-&gt;firstin = arc;</td></tr><tr><td align="right">301</td><td align="left"></td></tr><tr><td align="right">295</td><td align="left">arc = arc + 1;</td></tr></table>>]
296 -> 294[label=""]
276 -> 277 [label="Function start dummy edge" fontname="Courier New"]
286 -> 289 [label="[!(node < ((node_t *)stop))]" fontname="Courier New"]
286 -> 288 [label="[node < ((node_t *)stop)]" fontname="Courier New"]
289 -> 292 [label="arc = net->arcs;" fontname="Courier New"]
294 -> 297 [label="[!(arc < ((arc_t *)stop))]" fontname="Courier New"]
294 -> 296 [label="[arc < ((arc_t *)stop)]" fontname="Courier New"]
297 -> 275 [label="return;" fontname="Courier New"]
}