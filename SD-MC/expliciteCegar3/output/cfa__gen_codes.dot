digraph gen_codes {
6925 [shape="circle"]
6926 [shape="circle"]
6943 [shape="doublecircle"]
6945 [shape="circle"]
6944 [shape="circle"]
6949 [shape="circle"]
6950 [shape="doublecircle"]
6952 [shape="circle"]
6951 [shape="circle"]
6953 [shape="diamond"]
6954 [shape="circle"]
6955 [shape="circle"]
6961 [shape="circle"]
6962 [shape="circle"]
6957 [shape="circle"]
6958 [shape="circle"]
6959 [shape="circle"]
6924 [shape="circle"]
6926 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6926</td><td align="left">ush next_code[16];</td></tr><tr><td align="right">6928</td><td align="left">ush code;</td></tr><tr><td align="right">6930</td><td align="left">int bits;</td></tr><tr><td align="right">6932</td><td align="left">int n;</td></tr><tr><td align="right">6934</td><td align="left">int len;</td></tr><tr><td align="right">6936</td><td align="left">ush tmp;</td></tr><tr><td align="right">6938</td><td align="left">unsigned int tmp___0;</td></tr><tr><td align="right">6940</td><td align="left">code = (ush )0;</td></tr><tr><td align="right">6941</td><td align="left">bits = 1;</td></tr><tr><td align="right">6942</td><td align="left">while</td></tr></table>>]
6926 -> 6943[label=""]
6944 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6944</td><td align="left">code = (unsigned short)((((int)code) + ((int)(bl_count[bits - 1]))) &lt;&lt; 1);</td></tr><tr><td align="right">6946</td><td align="left">next_code[bits] = code;</td></tr><tr><td align="right">6947</td><td align="left">bits = bits + 1;</td></tr><tr><td align="right">6948</td><td align="left"></td></tr></table>>]
6944 -> 6943[label=""]
6959 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">6959</td><td align="left">(tree + n)-&gt;fc.code = (unsigned short)tmp___0;</td></tr><tr><td align="right">6960</td><td align="left">Label: __Cont</td></tr></table>>]
6959 -> 6961[label=""]
6925 -> 6926 [label="Function start dummy edge" fontname="Courier New"]
6943 -> 6945 [label="[!(bits <= 15)]" fontname="Courier New"]
6943 -> 6944 [label="[bits <= 15]" fontname="Courier New"]
6945 -> 6949 [label="n = 0;" fontname="Courier New"]
6950 -> 6952 [label="[!(n <= max_code)]" fontname="Courier New"]
6950 -> 6951 [label="[n <= max_code]" fontname="Courier New"]
6953 -> 6954 [label="[!(len == 0)]" fontname="Courier New"]
6953 -> 6955 [label="[len == 0]" fontname="Courier New"]
6961 -> 6962 [label="n = n + 1;" fontname="Courier New"]
6954 -> 6957 [label="tmp = next_code[len];" fontname="Courier New"]
100153 [shape="component" label="bi_reverse"]
6958 -> 100153 [label="tmp___0 = bi_reverse((unsigned int)tmp, len);" fontname="Courier New"]
100153 -> 6959 [label="" fontname="Courier New"]
6952 -> 6924 [label="return;" fontname="Courier New"]
6949 -> 6950 [label="while" fontname="Courier New"]
6951 -> 6953 [label="len = (int)((tree + n)->dl.len);" fontname="Courier New"]
6955 -> 6961 [label="Goto: __Cont" fontname="Courier New"]
6962 -> 6950 [label="" fontname="Courier New"]
6957 -> 6958 [label="next_code[len] = (ush )(((int)(next_code[len])) + 1);" fontname="Courier New"]
}