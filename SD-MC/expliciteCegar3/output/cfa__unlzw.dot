digraph unlzw {
1229 [shape="circle"]
1230 [shape="circle"]
1280 [shape="diamond"]
1283 [shape="circle"]
1282 [shape="circle"]
1281 [shape="circle"]
1289 [shape="diamond"]
1290 [shape="circle"]
1291 [shape="diamond"]
1292 [shape="diamond"]
1293 [shape="circle"]
1296 [shape="circle"]
1297 [shape="circle"]
1299 [shape="circle"]
1300 [shape="diamond"]
1301 [shape="circle"]
1302 [shape="circle"]
1307 [shape="circle"]
1314 [shape="diamond"]
1317 [shape="circle"]
1316 [shape="circle"]
1315 [shape="circle"]
1320 [shape="circle"]
1322 [shape="doublecircle"]
1324 [shape="circle"]
1323 [shape="circle"]
1327 [shape="doublecircle"]
1328 [shape="circle"]
1330 [shape="doublecircle"]
1331 [shape="circle"]
1334 [shape="doublecircle"]
1336 [shape="circle"]
1335 [shape="circle"]
1339 [shape="circle"]
1340 [shape="diamond"]
1341 [shape="diamond"]
1342 [shape="circle"]
1343 [shape="diamond"]
1344 [shape="circle"]
1345 [shape="circle"]
1346 [shape="circle"]
1347 [shape="circle"]
1351 [shape="circle"]
1350 [shape="circle"]
1349 [shape="circle"]
1354 [shape="doublecircle"]
1356 [shape="diamond"]
1355 [shape="diamond"]
1357 [shape="circle"]
1358 [shape="circle"]
1360 [shape="diamond"]
1363 [shape="circle"]
1362 [shape="circle"]
1361 [shape="circle"]
1366 [shape="circle"]
1365 [shape="circle"]
1368 [shape="circle"]
1370 [shape="diamond"]
1371 [shape="diamond"]
1372 [shape="diamond"]
1373 [shape="circle"]
1374 [shape="circle"]
1375 [shape="circle"]
1376 [shape="circle"]
1382 [shape="circle"]
1383 [shape="diamond"]
1384 [shape="circle"]
1385 [shape="circle"]
1393 [shape="circle"]
1394 [shape="diamond"]
1395 [shape="circle"]
1396 [shape="diamond"]
1397 [shape="circle"]
1398 [shape="diamond"]
1399 [shape="diamond"]
1400 [shape="diamond"]
1401 [shape="circle"]
1402 [shape="circle"]
1403 [shape="circle"]
1407 [shape="circle"]
1406 [shape="circle"]
1405 [shape="circle"]
1410 [shape="circle"]
1411 [shape="circle"]
1414 [shape="doublecircle"]
1416 [shape="circle"]
1415 [shape="circle"]
1420 [shape="circle"]
1423 [shape="diamond"]
1426 [shape="circle"]
1425 [shape="circle"]
1427 [shape="doublecircle"]
1428 [shape="diamond"]
1430 [shape="diamond"]
1431 [shape="circle"]
1433 [shape="diamond"]
1434 [shape="circle"]
1437 [shape="circle"]
1438 [shape="diamond"]
1439 [shape="circle"]
1440 [shape="circle"]
1441 [shape="circle"]
1443 [shape="circle"]
1444 [shape="circle"]
1445 [shape="diamond"]
1446 [shape="circle"]
1447 [shape="circle"]
1424 [shape="circle"]
1451 [shape="diamond"]
1452 [shape="circle"]
1453 [shape="circle"]
1457 [shape="circle"]
1409 [shape="circle"]
1458 [shape="circle"]
1459 [shape="circle"]
1329 [shape="diamond"]
1461 [shape="circle"]
1462 [shape="diamond"]
1463 [shape="circle"]
1464 [shape="circle"]
1465 [shape="circle"]
1228 [shape="circle"]
1319 [shape="circle"]
1287 [shape="circle"]
1230 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 1230 and 1278"]
1230 -> 1280[label=""]
1282 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1282</td><td align="left">tmp = inptr;</td></tr><tr><td align="right">1284</td><td align="left">inptr = inptr + 1U;</td></tr><tr><td align="right">1285</td><td align="left">maxbits = (int)(*(inbuf + tmp));</td></tr><tr><td align="right">1286</td><td align="left"></td></tr></table>>]
1282 -> 1281[label=""]
1293 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1293</td><td align="left">tmp___1 = __getreent();</td></tr><tr><td align="right">1294</td><td align="left">fprintf(tmp___1-&gt;_stderr, \"\n%s: %s: warning, unknown flags 0x%x\n\", progname, ifname, maxbits &amp; 96);</td></tr><tr><td align="right">1295</td><td align="left"></td></tr></table>>]
1293 -> 1292[label=""]
1297 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1297</td><td align="left">exit_code = 2;</td></tr><tr><td align="right">1298</td><td align="left"></td></tr></table>>]
1297 -> 1290[label=""]
1302 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1302</td><td align="left">tmp___2 = __getreent();</td></tr><tr><td align="right">1303</td><td align="left">fprintf(tmp___2-&gt;_stderr, \"\n%s: %s: compressed with %d bits, can only handle %d bits\n\", progname, ifname, maxbits, 16);</td></tr><tr><td align="right">1304</td><td align="left">exit_code = 1;</td></tr><tr><td align="right">1305</td><td align="left">return 1;</td></tr></table>>]
1302 -> 1228[label=""]
1307 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1307</td><td align="left">n_bits = 9;</td></tr><tr><td align="right">1308</td><td align="left">maxcode = (1L &lt;&lt; n_bits) - 1L;</td></tr><tr><td align="right">1309</td><td align="left">bitmask = (unsigned int)((1 &lt;&lt; n_bits) - 1);</td></tr><tr><td align="right">1310</td><td align="left">oldcode = -1L;</td></tr><tr><td align="right">1311</td><td align="left">finchar = 0;</td></tr><tr><td align="right">1312</td><td align="left">outpos = 0;</td></tr><tr><td align="right">1313</td><td align="left">posbits = (long)(inptr &lt;&lt; 3);</td></tr></table>>]
1307 -> 1314[label=""]
1316 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1316</td><td align="left">free_ent = 257L;</td></tr><tr><td align="right">1318</td><td align="left"></td></tr></table>>]
1316 -> 1315[label=""]
1320 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1320</td><td align="left">code = 255L;</td></tr><tr><td align="right">1321</td><td align="left">while</td></tr></table>>]
1320 -> 1322[label=""]
1323 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1323</td><td align="left">*(window + code) = (unsigned char)code;</td></tr><tr><td align="right">1325</td><td align="left">code = code - 1;</td></tr><tr><td align="right">1326</td><td align="left"></td></tr></table>>]
1323 -> 1322[label=""]
1331 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1331</td><td align="left">e = (int)(insize - ((unsigned int)o));</td></tr><tr><td align="right">1332</td><td align="left">i__1 = 0;</td></tr><tr><td align="right">1333</td><td align="left">while</td></tr></table>>]
1331 -> 1334[label=""]
1335 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1335</td><td align="left">*(inbuf + i__1) = *(inbuf + (i__1 + o));</td></tr><tr><td align="right">1337</td><td align="left">i__1 = i__1 + 1;</td></tr><tr><td align="right">1338</td><td align="left"></td></tr></table>>]
1335 -> 1334[label=""]
1347 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1347</td><td align="left">bytes_in = (long)(((unsigned long)bytes_in) + ((unsigned long)rsize));</td></tr><tr><td align="right">1348</td><td align="left"></td></tr></table>>]
1347 -> 1341[label=""]
1350 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1350</td><td align="left">inbits = (long)((((unsigned long)((long)insize)) - ((unsigned long)(insize % ((unsigned int)n_bits)))) &lt;&lt; 3);</td></tr><tr><td align="right">1352</td><td align="left"></td></tr></table>>]
1350 -> 1349[label=""]
1358 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1358</td><td align="left">posbits = (posbits - 1L) + (((long)(n_bits &lt;&lt; 3)) - (((posbits - 1L) + ((long)(n_bits &lt;&lt; 3))) % ((long)(n_bits &lt;&lt; 3))));</td></tr><tr><td align="right">1359</td><td align="left">n_bits = n_bits + 1;</td></tr></table>>]
1358 -> 1360[label=""]
1362 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1362</td><td align="left">maxcode = maxmaxcode;</td></tr><tr><td align="right">1364</td><td align="left"></td></tr></table>>]
1362 -> 1361[label=""]
1368 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1368</td><td align="left">code = (long)(((unsigned long)(((((long)(*(p + 0))) &amp;#124; (((long)(*(p + 1))) &lt;&lt; 8)) &amp;#124; (((long)(*(p + 2))) &lt;&lt; 16)) &gt;&gt; (posbits &amp; 7L))) &amp; ((unsigned long)bitmask));</td></tr><tr><td align="right">1369</td><td align="left">posbits = posbits + ((long)n_bits);</td></tr></table>>]
1368 -> 1370[label=""]
1376 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1376</td><td align="left">outpos = outpos + 1;</td></tr><tr><td align="right">1377</td><td align="left">oldcode = code;</td></tr><tr><td align="right">1378</td><td align="left">finchar = (int)oldcode;</td></tr><tr><td align="right">1379</td><td align="left">*(outbuf + tmp___3) = (unsigned char)finchar;</td></tr><tr><td align="right">1380</td><td align="left">continue</td></tr></table>>]
1376 -> 1354[label=""]
1385 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1385</td><td align="left">memset((void *)prev, 0, 256U);</td></tr><tr><td align="right">1386</td><td align="left">free_ent = 256L;</td></tr><tr><td align="right">1387</td><td align="left">posbits = (posbits - 1L) + (((long)(n_bits &lt;&lt; 3)) - (((posbits - 1L) + ((long)(n_bits &lt;&lt; 3))) % ((long)(n_bits &lt;&lt; 3))));</td></tr><tr><td align="right">1388</td><td align="left">n_bits = 9;</td></tr><tr><td align="right">1389</td><td align="left">maxcode = (1L &lt;&lt; n_bits) - 1L;</td></tr><tr><td align="right">1390</td><td align="left">bitmask = (unsigned int)((1 &lt;&lt; n_bits) - 1);</td></tr><tr><td align="right">1391</td><td align="left">Goto: resetbuf</td></tr></table>>]
1385 -> 1330[label=""]
1403 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1403</td><td align="left">bytes_out = (long)(((unsigned long)bytes_out) + ((unsigned long)outpos));</td></tr><tr><td align="right">1404</td><td align="left"></td></tr></table>>]
1403 -> 1399[label=""]
1406 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1406</td><td align="left">tmp___4 = \"corrupt input.\";</td></tr><tr><td align="right">1408</td><td align="left"></td></tr></table>>]
1406 -> 1405[label=""]
1411 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1411</td><td align="left">*stackp = (unsigned char)finchar;</td></tr><tr><td align="right">1412</td><td align="left">code = oldcode;</td></tr><tr><td align="right">1413</td><td align="left"></td></tr></table>>]
1411 -> 1395[label=""]
1415 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1415</td><td align="left">stackp = stackp - 1;</td></tr><tr><td align="right">1417</td><td align="left">*stackp = *(window + code);</td></tr><tr><td align="right">1418</td><td align="left">code = (long)(*(prev + code));</td></tr><tr><td align="right">1419</td><td align="left"></td></tr></table>>]
1415 -> 1414[label=""]
1420 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1420</td><td align="left">finchar = (int)(*(window + code));</td></tr><tr><td align="right">1421</td><td align="left">*stackp = (unsigned char)finchar;</td></tr><tr><td align="right">1422</td><td align="left">i___0 = ((char_type *)(d_buf + 32767)) - stackp;</td></tr></table>>]
1420 -> 1423[label=""]
1431 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1431</td><td align="left">i___0 = 16384 - outpos;</td></tr><tr><td align="right">1432</td><td align="left"></td></tr></table>>]
1431 -> 1430[label=""]
1434 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1434</td><td align="left">memcpy((void *)(outbuf + outpos), (const void *)stackp, (unsigned int)i___0);</td></tr><tr><td align="right">1435</td><td align="left">outpos = outpos + i___0;</td></tr><tr><td align="right">1436</td><td align="left"></td></tr></table>>]
1434 -> 1433[label=""]
1441 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1441</td><td align="left">bytes_out = (long)(((unsigned long)bytes_out) + ((unsigned long)outpos));</td></tr><tr><td align="right">1442</td><td align="left"></td></tr></table>>]
1441 -> 1439[label=""]
1447 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1447</td><td align="left">break</td></tr><tr><td align="right">1429</td><td align="left"></td></tr></table>>]
1447 -> 1424[label=""]
1453 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1453</td><td align="left">*(prev + code) = (unsigned short)oldcode;</td></tr><tr><td align="right">1454</td><td align="left">*(window + code) = (unsigned char)finchar;</td></tr><tr><td align="right">1455</td><td align="left">free_ent = code + 1L;</td></tr><tr><td align="right">1456</td><td align="left"></td></tr></table>>]
1453 -> 1452[label=""]
1426 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1426</td><td align="left">memcpy((void *)(outbuf + outpos), (const void *)stackp, (unsigned int)i___0);</td></tr><tr><td align="right">1449</td><td align="left">outpos = outpos + i___0;</td></tr><tr><td align="right">1450</td><td align="left"></td></tr></table>>]
1426 -> 1424[label=""]
1465 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1465</td><td align="left">bytes_out = (long)(((unsigned long)bytes_out) + ((unsigned long)outpos));</td></tr><tr><td align="right">1466</td><td align="left"></td></tr></table>>]
1465 -> 1461[label=""]
1351 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1351</td><td align="left">inbits = (((long)insize) &lt;&lt; 3) - ((long)(n_bits - 1));</td></tr><tr><td align="right">1353</td><td align="left"></td></tr></table>>]
1351 -> 1349[label=""]
1287 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1287</td><td align="left">maxbits = tmp___0;</td></tr><tr><td align="right">1288</td><td align="left"></td></tr></table>>]
1287 -> 1281[label=""]
1229 -> 1230 [label="Function start dummy edge" fontname="Courier New"]
1280 -> 1283 [label="[!(inptr < insize)]" fontname="Courier New"]
1280 -> 1282 [label="[inptr < insize]" fontname="Courier New"]
1281 -> 1289 [label="block_mode = maxbits & 128;" fontname="Courier New"]
1289 -> 1290 [label="[!((maxbits & 96) != 0)]" fontname="Courier New"]
1289 -> 1291 [label="[(maxbits & 96) != 0]" fontname="Courier New"]
1291 -> 1292 [label="[!(!quiet)]" fontname="Courier New"]
1291 -> 1293 [label="[!quiet]" fontname="Courier New"]
1292 -> 1296 [label="[!(exit_code == 0)]" fontname="Courier New"]
1292 -> 1297 [label="[exit_code == 0]" fontname="Courier New"]
1290 -> 1299 [label="maxbits = maxbits & 31;" fontname="Courier New"]
1300 -> 1301 [label="[!(maxbits > 16)]" fontname="Courier New"]
1300 -> 1302 [label="[maxbits > 16]" fontname="Courier New"]
1301 -> 1307 [label="rsize = (int)insize;" fontname="Courier New"]
1314 -> 1317 [label="[!(block_mode != 0)]" fontname="Courier New"]
1314 -> 1316 [label="[block_mode != 0]" fontname="Courier New"]
1315 -> 1320 [label="memset((void *)prev, 0, 256U);" fontname="Courier New"]
1322 -> 1324 [label="[!(code >= 0L)]" fontname="Courier New"]
1322 -> 1323 [label="[code >= 0L]" fontname="Courier New"]
1324 -> 1327 [label="while" fontname="Courier New"]
1327 -> 1328 [label="" fontname="Courier New"]
1330 -> 1331 [label="o = (int)(posbits >> 3);" fontname="Courier New"]
1334 -> 1336 [label="[!(i__1 < e)]" fontname="Courier New"]
1334 -> 1335 [label="[i__1 < e]" fontname="Courier New"]
1336 -> 1339 [label="insize = (unsigned int)e;" fontname="Courier New"]
1340 -> 1341 [label="[!(insize < 64U)]" fontname="Courier New"]
1340 -> 1342 [label="[insize < 64U]" fontname="Courier New"]
100263 [shape="component" label="spec_read"]
1342 -> 100263 [label="rsize = spec_read(in, (unsigned char *)(((char *)inbuf) + insize), 32768);" fontname="Courier New"]
100263 -> 1343 [label="" fontname="Courier New"]
1343 -> 1344 [label="[!(rsize == (-1))]" fontname="Courier New"]
1343 -> 1345 [label="[rsize == (-1)]" fontname="Courier New"]
100264 [shape="component" label="read_error"]
1345 -> 100264 [label="read_error();" fontname="Courier New"]
100264 -> 1346 [label="" fontname="Courier New"]
1344 -> 1347 [label="insize = insize + ((unsigned int)rsize);" fontname="Courier New"]
1341 -> 1351 [label="[!(rsize != 0)]" fontname="Courier New"]
1341 -> 1350 [label="[rsize != 0]" fontname="Courier New"]
1349 -> 1354 [label="while" fontname="Courier New"]
1354 -> 1356 [label="[!(inbits > posbits)]" fontname="Courier New"]
1354 -> 1355 [label="[inbits > posbits]" fontname="Courier New"]
1355 -> 1357 [label="[!(free_ent > maxcode)]" fontname="Courier New"]
1355 -> 1358 [label="[free_ent > maxcode]" fontname="Courier New"]
1360 -> 1363 [label="[!(n_bits == maxbits)]" fontname="Courier New"]
1360 -> 1362 [label="[n_bits == maxbits]" fontname="Courier New"]
1361 -> 1366 [label="bitmask = (unsigned int)((1 << n_bits) - 1);" fontname="Courier New"]
1363 -> 1365 [label="maxcode = (1L << n_bits) - 1L;" fontname="Courier New"]
1357 -> 1368 [label="p = inbuf + (posbits >> 3);" fontname="Courier New"]
1370 -> 1371 [label="[!(oldcode == (-1L))]" fontname="Courier New"]
1370 -> 1372 [label="[oldcode == (-1L)]" fontname="Courier New"]
1372 -> 1373 [label="[!(code >= 256L)]" fontname="Courier New"]
1372 -> 1374 [label="[code >= 256L]" fontname="Courier New"]
100265 [shape="component" label="error"]
1374 -> 100265 [label="error((char *)\"corrupt input.\");" fontname="Courier New"]
100265 -> 1375 [label="" fontname="Courier New"]
1373 -> 1376 [label="tmp___3 = outpos;" fontname="Courier New"]
1371 -> 1382 [label="[!(code == 256L)]" fontname="Courier New"]
1371 -> 1383 [label="[code == 256L]" fontname="Courier New"]
1383 -> 1384 [label="[!(block_mode != 0)]" fontname="Courier New"]
1383 -> 1385 [label="[block_mode != 0]" fontname="Courier New"]
1384 -> 1382 [label="" fontname="Courier New"]
1382 -> 1393 [label="incode = code;" fontname="Courier New"]
1394 -> 1395 [label="[!(code >= free_ent)]" fontname="Courier New"]
1394 -> 1396 [label="[code >= free_ent]" fontname="Courier New"]
1396 -> 1397 [label="[!(code > free_ent)]" fontname="Courier New"]
1396 -> 1398 [label="[code > free_ent]" fontname="Courier New"]
1398 -> 1399 [label="[!(!test)]" fontname="Courier New"]
1398 -> 1400 [label="[!test]" fontname="Courier New"]
1400 -> 1401 [label="[!(outpos > 0)]" fontname="Courier New"]
1400 -> 1402 [label="[outpos > 0]" fontname="Courier New"]
100266 [shape="component" label="write_buf"]
1402 -> 100266 [label="write_buf(out, (void *)((char *)outbuf), (unsigned int)outpos);" fontname="Courier New"]
100266 -> 1403 [label="" fontname="Courier New"]
1399 -> 1407 [label="[!(to_stdout != 0)]" fontname="Courier New"]
1399 -> 1406 [label="[to_stdout != 0]" fontname="Courier New"]
100267 [shape="component" label="error"]
1405 -> 100267 [label="error((char *)tmp___4);" fontname="Courier New"]
100267 -> 1410 [label="" fontname="Courier New"]
1397 -> 1411 [label="stackp = stackp - 1;" fontname="Courier New"]
1395 -> 1414 [label="while" fontname="Courier New"]
1414 -> 1416 [label="[!(((unsigned long)code) >= 256UL)]" fontname="Courier New"]
1414 -> 1415 [label="[((unsigned long)code) >= 256UL]" fontname="Courier New"]
1416 -> 1420 [label="stackp = stackp - 1;" fontname="Courier New"]
1423 -> 1426 [label="[!((outpos + i___0) >= 16384)]" fontname="Courier New"]
1423 -> 1425 [label="[(outpos + i___0) >= 16384]" fontname="Courier New"]
1427 -> 1428 [label="" fontname="Courier New"]
1428 -> 1430 [label="[!(i___0 > (16384 - outpos))]" fontname="Courier New"]
1428 -> 1431 [label="[i___0 > (16384 - outpos)]" fontname="Courier New"]
1430 -> 1433 [label="[!(i___0 > 0)]" fontname="Courier New"]
1430 -> 1434 [label="[i___0 > 0]" fontname="Courier New"]
1433 -> 1437 [label="[!(outpos >= 16384)]" fontname="Courier New"]
1433 -> 1438 [label="[outpos >= 16384]" fontname="Courier New"]
1438 -> 1439 [label="[!(!test)]" fontname="Courier New"]
1438 -> 1440 [label="[!test]" fontname="Courier New"]
100268 [shape="component" label="write_buf"]
1440 -> 100268 [label="write_buf(out, (void *)((char *)outbuf), (unsigned int)outpos);" fontname="Courier New"]
100268 -> 1441 [label="" fontname="Courier New"]
1439 -> 1443 [label="outpos = 0;" fontname="Courier New"]
1437 -> 1444 [label="stackp = stackp + i___0;" fontname="Courier New"]
1445 -> 1446 [label="[!(!(i___0 > 0))]" fontname="Courier New"]
1445 -> 1447 [label="[!(i___0 > 0)]" fontname="Courier New"]
1424 -> 1451 [label="code = free_ent;" fontname="Courier New"]
1451 -> 1452 [label="[!(code < maxmaxcode)]" fontname="Courier New"]
1451 -> 1453 [label="[code < maxmaxcode]" fontname="Courier New"]
1452 -> 1457 [label="oldcode = incode;" fontname="Courier New"]
1446 -> 1427 [label="" fontname="Courier New"]
1407 -> 1409 [label="tmp___4 = \"corrupt input. Use zcat to recover some data.\";" fontname="Courier New"]
1401 -> 1399 [label="" fontname="Courier New"]
1356 -> 1458 [label="[!(!(rsize != 0))]" fontname="Courier New"]
1356 -> 1459 [label="[!(rsize != 0)]" fontname="Courier New"]
1329 -> 1461 [label="[!(!test)]" fontname="Courier New"]
1329 -> 1462 [label="[!test]" fontname="Courier New"]
1462 -> 1463 [label="[!(outpos > 0)]" fontname="Courier New"]
1462 -> 1464 [label="[outpos > 0]" fontname="Courier New"]
100269 [shape="component" label="write_buf"]
1464 -> 100269 [label="write_buf(out, (void *)((char *)outbuf), (unsigned int)outpos);" fontname="Courier New"]
100269 -> 1465 [label="" fontname="Courier New"]
1461 -> 1228 [label="return 0;" fontname="Courier New"]
1458 -> 1327 [label="" fontname="Courier New"]
1317 -> 1319 [label="free_ent = 256L;" fontname="Courier New"]
1296 -> 1290 [label="" fontname="Courier New"]
100270 [shape="component" label="fill_inbuf"]
1283 -> 100270 [label="tmp___0 = fill_inbuf(0);" fontname="Courier New"]
100270 -> 1287 [label="" fontname="Courier New"]
1299 -> 1300 [label="maxmaxcode = 1L << maxbits;" fontname="Courier New"]
1328 -> 1330 [label="Label: resetbuf" fontname="Courier New"]
1339 -> 1340 [label="posbits = 0L;" fontname="Courier New"]
1346 -> 1344 [label="" fontname="Courier New"]
1366 -> 1330 [label="Goto: resetbuf" fontname="Courier New"]
1365 -> 1361 [label="" fontname="Courier New"]
1375 -> 1373 [label="" fontname="Courier New"]
1393 -> 1394 [label="stackp = (char_type *)(d_buf + 32767);" fontname="Courier New"]
1410 -> 1397 [label="" fontname="Courier New"]
1425 -> 1427 [label="while" fontname="Courier New"]
1443 -> 1437 [label="" fontname="Courier New"]
1444 -> 1445 [label="i___0 = ((char_type *)(d_buf + 32767)) - stackp;" fontname="Courier New"]
1457 -> 1354 [label="" fontname="Courier New"]
1409 -> 1405 [label="" fontname="Courier New"]
1459 -> 1329 [label="break" fontname="Courier New"]
1463 -> 1461 [label="" fontname="Courier New"]
1319 -> 1315 [label="" fontname="Courier New"]
}