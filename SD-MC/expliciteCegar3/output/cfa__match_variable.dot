digraph match_variable {
14102 [shape="circle"]
14103 [shape="circle"]
14109 [shape="doublecircle"]
14110 [shape="diamond"]
14112 [shape="circle"]
14113 [shape="circle"]
14115 [shape="diamond"]
14116 [shape="diamond"]
14117 [shape="circle"]
14119 [shape="circle"]
14120 [shape="circle"]
14122 [shape="circle"]
14101 [shape="circle"]
14103 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">14103</td><td align="left">VARIABLE___0 *vp;</td></tr><tr><td align="right">14105</td><td align="left">int tmp;</td></tr><tr><td align="right">14107</td><td align="left">vp = variableFIRST;</td></tr><tr><td align="right">14108</td><td align="left">while</td></tr></table>>]
14103 -> 14109[label=""]
14102 -> 14103 [label="Function start dummy edge" fontname="Courier New"]
14109 -> 14110 [label="" fontname="Courier New"]
14110 -> 14112 [label="[!(((unsigned int)vp) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
14110 -> 14113 [label="[((unsigned int)vp) == ((unsigned int)((void *)0))]" fontname="Courier New"]
14112 -> 14115 [label="tmp = strcmp((const char *)(&((vp->name)[0])), (const char *)name);" fontname="Courier New"]
14115 -> 14116 [label="[!(tmp == 0)]" fontname="Courier New"]
14115 -> 14117 [label="[tmp == 0]" fontname="Courier New"]
14116 -> 14119 [label="[!(((unsigned int)vp) == ((unsigned int)(vp->next)))]" fontname="Courier New"]
14116 -> 14120 [label="[((unsigned int)vp) == ((unsigned int)(vp->next))]" fontname="Courier New"]
14119 -> 14122 [label="vp = (VARIABLE___0 *)(vp->next);" fontname="Courier New"]
14113 -> 14101 [label="return (struct __anonstruct_VARIABLE_25 *)vp;" fontname="Courier New"]
14117 -> 14101 [label="return (struct __anonstruct_VARIABLE_25 *)vp;" fontname="Courier New"]
14120 -> 14101 [label="return (struct __anonstruct_VARIABLE_25 *)((void *)0);" fontname="Courier New"]
14122 -> 14109 [label="" fontname="Courier New"]
}