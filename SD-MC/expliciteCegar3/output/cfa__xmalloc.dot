digraph xmalloc {
1201 [shape="circle"]
1202 [shape="circle"]
1208 [shape="diamond"]
1209 [shape="circle"]
1210 [shape="circle"]
1211 [shape="circle"]
1200 [shape="circle"]
1202 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">1202</td><td align="left">voidp cp;</td></tr><tr><td align="right">1204</td><td align="left">void *tmp;</td></tr><tr><td align="right">1206</td><td align="left">tmp = malloc(size);</td></tr><tr><td align="right">1207</td><td align="left">cp = tmp;</td></tr></table>>]
1202 -> 1208[label=""]
1201 -> 1202 [label="Function start dummy edge" fontname="Courier New"]
1208 -> 1209 [label="[!(((unsigned int)cp) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
1208 -> 1210 [label="[((unsigned int)cp) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100012 [shape="component" label="error"]
1210 -> 100012 [label="error((char *)\"out of memory\");" fontname="Courier New"]
100012 -> 1211 [label="" fontname="Courier New"]
1209 -> 1200 [label="return cp;" fontname="Courier New"]
1211 -> 1209 [label="" fontname="Courier New"]
}