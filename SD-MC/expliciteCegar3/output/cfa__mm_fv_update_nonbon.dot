digraph mm_fv_update_nonbon {
9655 [shape="circle"]
9656 [shape="circle"]
9657 [shape="diamond"]
9658 [shape="circle"]
9659 [shape="circle"]
9661 [shape="diamond"]
9662 [shape="circle"]
9663 [shape="circle"]
9665 [shape="circle"]
9666 [shape="circle"]
9668 [shape="diamond"]
9669 [shape="circle"]
9670 [shape="circle"]
9671 [shape="circle"]
9673 [shape="circle"]
9674 [shape="diamond"]
9675 [shape="circle"]
9676 [shape="circle"]
9677 [shape="circle"]
9679 [shape="circle"]
9680 [shape="diamond"]
9681 [shape="circle"]
9682 [shape="circle"]
9683 [shape="circle"]
9685 [shape="circle"]
9688 [shape="doublecircle"]
9690 [shape="circle"]
9689 [shape="circle"]
9691 [shape="circle"]
9694 [shape="circle"]
9695 [shape="doublecircle"]
9697 [shape="circle"]
9696 [shape="circle"]
9704 [shape="circle"]
9711 [shape="doublecircle"]
9713 [shape="circle"]
9712 [shape="circle"]
9714 [shape="diamond"]
9715 [shape="diamond"]
9716 [shape="circle"]
9718 [shape="diamond"]
9719 [shape="circle"]
9721 [shape="diamond"]
9722 [shape="circle"]
9724 [shape="diamond"]
9725 [shape="circle"]
9727 [shape="diamond"]
9728 [shape="circle"]
9730 [shape="circle"]
9731 [shape="circle"]
9733 [shape="circle"]
9734 [shape="circle"]
9738 [shape="diamond"]
9739 [shape="circle"]
9740 [shape="circle"]
9741 [shape="circle"]
9742 [shape="circle"]
9743 [shape="circle"]
9744 [shape="circle"]
9745 [shape="circle"]
9746 [shape="circle"]
9747 [shape="circle"]
9752 [shape="diamond"]
9753 [shape="circle"]
9754 [shape="circle"]
9755 [shape="circle"]
9757 [shape="circle"]
9758 [shape="doublecircle"]
9760 [shape="circle"]
9759 [shape="circle"]
9762 [shape="doublecircle"]
9764 [shape="circle"]
9763 [shape="circle"]
9766 [shape="doublecircle"]
9768 [shape="circle"]
9767 [shape="circle"]
9774 [shape="circle"]
9775 [shape="circle"]
9776 [shape="circle"]
9777 [shape="doublecircle"]
9779 [shape="circle"]
9778 [shape="circle"]
9808 [shape="circle"]
9809 [shape="doublecircle"]
9811 [shape="circle"]
9810 [shape="circle"]
9819 [shape="circle"]
9820 [shape="doublecircle"]
9822 [shape="circle"]
9821 [shape="circle"]
9824 [shape="doublecircle"]
9826 [shape="diamond"]
9825 [shape="diamond"]
9827 [shape="circle"]
9828 [shape="circle"]
9835 [shape="circle"]
9836 [shape="circle"]
9838 [shape="doublecircle"]
9840 [shape="circle"]
9839 [shape="diamond"]
9841 [shape="circle"]
9842 [shape="circle"]
9883 [shape="circle"]
9884 [shape="circle"]
9834 [shape="circle"]
9885 [shape="circle"]
9890 [shape="doublecircle"]
9892 [shape="circle"]
9891 [shape="circle"]
9912 [shape="diamond"]
9913 [shape="circle"]
9914 [shape="circle"]
9918 [shape="circle"]
9923 [shape="circle"]
9924 [shape="doublecircle"]
9926 [shape="circle"]
9925 [shape="circle"]
9942 [shape="doublecircle"]
9944 [shape="circle"]
9943 [shape="circle"]
9947 [shape="circle"]
9948 [shape="circle"]
9949 [shape="doublecircle"]
9951 [shape="circle"]
9950 [shape="circle"]
9985 [shape="doublecircle"]
9987 [shape="circle"]
9986 [shape="circle"]
9989 [shape="doublecircle"]
9991 [shape="diamond"]
9990 [shape="diamond"]
9992 [shape="circle"]
9993 [shape="circle"]
9998 [shape="diamond"]
9997 [shape="diamond"]
9999 [shape="circle"]
10000 [shape="circle"]
9996 [shape="circle"]
10223 [shape="circle"]
10110 [shape="circle"]
10111 [shape="circle"]
10113 [shape="diamond"]
10114 [shape="circle"]
10115 [shape="diamond"]
10116 [shape="circle"]
10117 [shape="circle"]
10121 [shape="circle"]
10122 [shape="doublecircle"]
10124 [shape="circle"]
10123 [shape="circle"]
10125 [shape="diamond"]
10126 [shape="circle"]
10127 [shape="circle"]
10131 [shape="circle"]
10132 [shape="circle"]
10133 [shape="doublecircle"]
10135 [shape="circle"]
10134 [shape="circle"]
10142 [shape="circle"]
10143 [shape="doublecircle"]
10145 [shape="circle"]
10144 [shape="circle"]
10149 [shape="circle"]
10150 [shape="doublecircle"]
10152 [shape="circle"]
10151 [shape="circle"]
10155 [shape="doublecircle"]
10157 [shape="circle"]
10156 [shape="diamond"]
10158 [shape="circle"]
10159 [shape="circle"]
10220 [shape="circle"]
10221 [shape="circle"]
10161 [shape="circle"]
10162 [shape="diamond"]
10165 [shape="diamond"]
10164 [shape="circle"]
10170 [shape="circle"]
10171 [shape="circle"]
10163 [shape="circle"]
10169 [shape="circle"]
10168 [shape="circle"]
10214 [shape="circle"]
10216 [shape="diamond"]
10217 [shape="circle"]
10218 [shape="circle"]
10219 [shape="circle"]
9995 [shape="circle"]
10224 [shape="circle"]
10228 [shape="circle"]
9527 [shape="circle"]
9528 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 9528 and 9653"]
9528 -> 9655[label=""]
9659 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9659</td><td align="left">mxcut = 5;</td></tr><tr><td align="right">9660</td><td align="left"></td></tr></table>>]
9659 -> 9658[label=""]
9663 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9663</td><td align="left">dielectric = 1;</td></tr><tr><td align="right">9664</td><td align="left"></td></tr></table>>]
9663 -> 9662[label=""]
9666 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9666</td><td align="left">tmp = malloc(((unsigned int)(4 * i)) * (sizeof(double)));</td></tr><tr><td align="right">9667</td><td align="left">vector = (double (*)[])tmp;</td></tr></table>>]
9666 -> 9668[label=""]
9685 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9685</td><td align="left">jj = imax;</td></tr><tr><td align="right">9686</td><td align="left">i = 0;</td></tr><tr><td align="right">9687</td><td align="left">while</td></tr></table>>]
9685 -> 9688[label=""]
9691 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9691</td><td align="left">((*atomlist)[i]).who = (*atomall)[i];</td></tr><tr><td align="right">9692</td><td align="left">i = i + 1;</td></tr><tr><td align="right">9693</td><td align="left"></td></tr></table>>]
9691 -> 9688[label=""]
9696 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9696</td><td align="left">a1 = (*atomall)[ii];</td></tr><tr><td align="right">9698</td><td align="left">j = ii * 4;</td></tr><tr><td align="right">9699</td><td align="left">(*vector)[j] = ((a1-&gt;dx) * lambda) + (a1-&gt;x);</td></tr><tr><td align="right">9700</td><td align="left">(*vector)[j + 1] = ((a1-&gt;dy) * lambda) + (a1-&gt;y);</td></tr><tr><td align="right">9701</td><td align="left">(*vector)[j + 2] = ((a1-&gt;dz) * lambda) + (a1-&gt;z);</td></tr><tr><td align="right">9702</td><td align="left">ii = ii + 1;</td></tr><tr><td align="right">9703</td><td align="left"></td></tr></table>>]
9696 -> 9695[label=""]
9704 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9704</td><td align="left">ymax = -1.0E+11;</td></tr><tr><td align="right">9705</td><td align="left">zmax = -1.0E+11;</td></tr><tr><td align="right">9706</td><td align="left">xmin = 1.0E+11;</td></tr><tr><td align="right">9707</td><td align="left">ymin = 1.0E+11;</td></tr><tr><td align="right">9708</td><td align="left">zmin = 1.0E+11;</td></tr><tr><td align="right">9709</td><td align="left">ii = 0;</td></tr><tr><td align="right">9710</td><td align="left">while</td></tr></table>>]
9704 -> 9711[label=""]
9716 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9716</td><td align="left">xmax = (*vector)[j];</td></tr><tr><td align="right">9717</td><td align="left"></td></tr></table>>]
9716 -> 9715[label=""]
9719 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9719</td><td align="left">ymax = (*vector)[j + 1];</td></tr><tr><td align="right">9720</td><td align="left"></td></tr></table>>]
9719 -> 9718[label=""]
9722 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9722</td><td align="left">zmax = (*vector)[j + 2];</td></tr><tr><td align="right">9723</td><td align="left"></td></tr></table>>]
9722 -> 9721[label=""]
9725 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9725</td><td align="left">xmin = (*vector)[j];</td></tr><tr><td align="right">9726</td><td align="left"></td></tr></table>>]
9725 -> 9724[label=""]
9728 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9728</td><td align="left">ymin = (*vector)[j + 1];</td></tr><tr><td align="right">9729</td><td align="left"></td></tr></table>>]
9728 -> 9727[label=""]
9731 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9731</td><td align="left">zmin = (*vector)[j + 2];</td></tr><tr><td align="right">9732</td><td align="left"></td></tr></table>>]
9731 -> 9730[label=""]
9734 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9734</td><td align="left">ny = (int)(((ymax - ymin) / mmbox) + ((double)1));</td></tr><tr><td align="right">9735</td><td align="left">nz = (int)(((zmax - zmin) / mmbox) + ((double)1));</td></tr><tr><td align="right">9736</td><td align="left">tmp___2 = malloc(((unsigned int)((nx * ny) * nz)) * (sizeof(MMNODE )));</td></tr><tr><td align="right">9737</td><td align="left">nodelist = (MMNODE (*)[])tmp___2;</td></tr></table>>]
9734 -> 9738[label=""]
9747 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9747</td><td align="left">nx = (int)(((xmax - xmin) / mmbox) + ((double)1));</td></tr><tr><td align="right">9748</td><td align="left">ny = (int)(((ymax - ymin) / mmbox) + ((double)1));</td></tr><tr><td align="right">9749</td><td align="left">nz = (int)(((zmax - zmin) / mmbox) + ((double)1));</td></tr><tr><td align="right">9750</td><td align="left">tmp___3 = malloc(((unsigned int)((nx * ny) * nz)) * (sizeof(MMNODE )));</td></tr><tr><td align="right">9751</td><td align="left">nodelist = (MMNODE (*)[])tmp___3;</td></tr></table>>]
9747 -> 9752[label=""]
9759 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9759</td><td align="left">iy = 0;</td></tr><tr><td align="right">9761</td><td align="left">while</td></tr></table>>]
9759 -> 9762[label=""]
9763 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9763</td><td align="left">iz = 0;</td></tr><tr><td align="right">9765</td><td align="left">while</td></tr></table>>]
9763 -> 9766[label=""]
9767 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9767</td><td align="left">inode = (((iz * ny) + iy) * nx) + ix;</td></tr><tr><td align="right">9769</td><td align="left">((*nodelist)[inode]).xc = ((((double)ix) * mmbox) + (0.5 * mmbox)) + xmin;</td></tr><tr><td align="right">9770</td><td align="left">((*nodelist)[inode]).yc = ((((double)iy) * mmbox) + (0.5 * mmbox)) + ymin;</td></tr><tr><td align="right">9771</td><td align="left">((*nodelist)[inode]).zc = ((((double)iz) * mmbox) + (0.5 * mmbox)) + zmin;</td></tr><tr><td align="right">9772</td><td align="left">iz = iz + 1;</td></tr><tr><td align="right">9773</td><td align="left"></td></tr></table>>]
9767 -> 9766[label=""]
9778 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 9778 and 9807"]
9778 -> 9777[label=""]
9810 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9810</td><td align="left">j = ii * 4;</td></tr><tr><td align="right">9812</td><td align="left">ix = (int)((((*vector)[j]) - xmin) / mmbox);</td></tr><tr><td align="right">9813</td><td align="left">iy = (int)((((*vector)[j + 1]) - ymin) / mmbox);</td></tr><tr><td align="right">9814</td><td align="left">iz = (int)((((*vector)[j + 2]) - zmin) / mmbox);</td></tr><tr><td align="right">9815</td><td align="left">inode = (((iz * ny) + iy) * nx) + ix;</td></tr><tr><td align="right">9816</td><td align="left">((*atomlist)[ii]).which = inode;</td></tr><tr><td align="right">9817</td><td align="left">ii = ii + 1;</td></tr><tr><td align="right">9818</td><td align="left"></td></tr></table>>]
9810 -> 9809[label=""]
9821 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9821</td><td align="left">ii = 0;</td></tr><tr><td align="right">9823</td><td align="left">while</td></tr></table>>]
9821 -> 9824[label=""]
9828 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9828</td><td align="left">((*nodelist)[inode]).first = ii;</td></tr><tr><td align="right">9829</td><td align="left">((*nodelist)[inode]).last = ii;</td></tr><tr><td align="right">9830</td><td align="left">((*nodelist)[inode]).innode = (((*nodelist)[inode]).innode) + 1;</td></tr><tr><td align="right">9831</td><td align="left">ap___1 = ((*atomlist)[ii]).who;</td></tr><tr><td align="right">9832</td><td align="left">break</td></tr></table>>]
9828 -> 9826[label=""]
9836 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9836</td><td align="left">ii = ((*nodelist)[inode]).first;</td></tr><tr><td align="right">9837</td><td align="left">while</td></tr></table>>]
9836 -> 9838[label=""]
9842 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 9842 and 9882"]
9842 -> 9841[label=""]
9885 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9885</td><td align="left">xt = 0.5 / 3;</td></tr><tr><td align="right">9886</td><td align="left">yt = xt / 4;</td></tr><tr><td align="right">9887</td><td align="left">zt = yt / 5;</td></tr><tr><td align="right">9888</td><td align="left">ii = 0;</td></tr><tr><td align="right">9889</td><td align="left">while</td></tr></table>>]
9885 -> 9890[label=""]
9891 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9891</td><td align="left">((*nodelist)[ii]).sqp = (((*nodelist)[ii]).sqp) * k;</td></tr><tr><td align="right">9893</td><td align="left">((*nodelist)[ii]).q100 = (((*nodelist)[ii]).q100) * k;</td></tr><tr><td align="right">9894</td><td align="left">((*nodelist)[ii]).q010 = (((*nodelist)[ii]).q010) * k;</td></tr><tr><td align="right">9895</td><td align="left">((*nodelist)[ii]).q001 = (((*nodelist)[ii]).q001) * k;</td></tr><tr><td align="right">9896</td><td align="left">((*nodelist)[ii]).q200 = (((*nodelist)[ii]).q200) * (0.5 * k);</td></tr><tr><td align="right">9897</td><td align="left">((*nodelist)[ii]).q020 = (((*nodelist)[ii]).q020) * (0.5 * k);</td></tr><tr><td align="right">9898</td><td align="left">((*nodelist)[ii]).q002 = (((*nodelist)[ii]).q002) * (0.5 * k);</td></tr><tr><td align="right">9899</td><td align="left">((*nodelist)[ii]).q101 = (((*nodelist)[ii]).q101) * k;</td></tr><tr><td align="right">9900</td><td align="left">((*nodelist)[ii]).q110 = (((*nodelist)[ii]).q110) * k;</td></tr><tr><td align="right">9901</td><td align="left">((*nodelist)[ii]).q011 = (((*nodelist)[ii]).q011) * k;</td></tr><tr><td align="right">9902</td><td align="left">((*nodelist)[ii]).q300 = (((*nodelist)[ii]).q300) * (xt * k);</td></tr><tr><td align="right">9903</td><td align="left">((*nodelist)[ii]).q030 = (((*nodelist)[ii]).q030) * (xt * k);</td></tr><tr><td align="right">9904</td><td align="left">((*nodelist)[ii]).q003 = (((*nodelist)[ii]).q003) * (xt * k);</td></tr><tr><td align="right">9905</td><td align="left">((*nodelist)[ii]).q210 = (((*nodelist)[ii]).q210) * (0.5 * k);</td></tr><tr><td align="right">9906</td><td align="left">((*nodelist)[ii]).q120 = (((*nodelist)[ii]).q120) * (0.5 * k);</td></tr><tr><td align="right">9907</td><td align="left">((*nodelist)[ii]).q201 = (((*nodelist)[ii]).q201) * (0.5 * k);</td></tr><tr><td align="right">9908</td><td align="left">((*nodelist)[ii]).q102 = (((*nodelist)[ii]).q102) * (0.5 * k);</td></tr><tr><td align="right">9909</td><td align="left">((*nodelist)[ii]).q021 = (((*nodelist)[ii]).q021) * (0.5 * k);</td></tr><tr><td align="right">9910</td><td align="left">((*nodelist)[ii]).q012 = (((*nodelist)[ii]).q012) * (0.5 * k);</td></tr><tr><td align="right">9911</td><td align="left">((*nodelist)[ii]).q111 = (((*nodelist)[ii]).q111) * k;</td></tr></table>>]
9891 -> 9912[label=""]
9914 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9914</td><td align="left">((*nodelist)[ii]).xa = (((*nodelist)[ii]).xa) / (((*nodelist)[ii]).sa);</td></tr><tr><td align="right">9915</td><td align="left">((*nodelist)[ii]).ya = (((*nodelist)[ii]).ya) / (((*nodelist)[ii]).sa);</td></tr><tr><td align="right">9916</td><td align="left">((*nodelist)[ii]).za = (((*nodelist)[ii]).za) / (((*nodelist)[ii]).sa);</td></tr><tr><td align="right">9917</td><td align="left"></td></tr></table>>]
9914 -> 9913[label=""]
9918 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9918</td><td align="left">((*nodelist)[ii]).ya = (((*nodelist)[ii]).ya) + (((*nodelist)[ii]).yc);</td></tr><tr><td align="right">9919</td><td align="left">((*nodelist)[ii]).za = (((*nodelist)[ii]).za) + (((*nodelist)[ii]).zc);</td></tr><tr><td align="right">9920</td><td align="left">((*nodelist)[ii]).sa = (((*nodelist)[ii]).sa) * 0.5;</td></tr><tr><td align="right">9921</td><td align="left">ii = ii + 1;</td></tr><tr><td align="right">9922</td><td align="left"></td></tr></table>>]
9918 -> 9890[label=""]
9925 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9925</td><td align="left">a1 = (*atomall)[ii];</td></tr><tr><td align="right">9927</td><td align="left">a1-&gt;px = (a1-&gt;x) + (lambda * (a1-&gt;dx));</td></tr><tr><td align="right">9928</td><td align="left">a1-&gt;py = (a1-&gt;y) + (lambda * (a1-&gt;dy));</td></tr><tr><td align="right">9929</td><td align="left">a1-&gt;pz = (a1-&gt;z) + (lambda * (a1-&gt;dz));</td></tr><tr><td align="right">9930</td><td align="left">a1-&gt;VP = 0;</td></tr><tr><td align="right">9931</td><td align="left">a1-&gt;dpx = 0;</td></tr><tr><td align="right">9932</td><td align="left">a1-&gt;dpy = 0;</td></tr><tr><td align="right">9933</td><td align="left">a1-&gt;dpz = 0;</td></tr><tr><td align="right">9934</td><td align="left">a1-&gt;qxx = 0;</td></tr><tr><td align="right">9935</td><td align="left">a1-&gt;qxy = 0;</td></tr><tr><td align="right">9936</td><td align="left">a1-&gt;qxz = 0;</td></tr><tr><td align="right">9937</td><td align="left">a1-&gt;qyy = 0;</td></tr><tr><td align="right">9938</td><td align="left">a1-&gt;qyz = 0;</td></tr><tr><td align="right">9939</td><td align="left">a1-&gt;qzz = 0;</td></tr><tr><td align="right">9940</td><td align="left">j = 0;</td></tr><tr><td align="right">9941</td><td align="left">while</td></tr></table>>]
9925 -> 9942[label=""]
9943 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9943</td><td align="left">(a1-&gt;close)[j] = (void *)0;</td></tr><tr><td align="right">9945</td><td align="left">j = j + 1;</td></tr><tr><td align="right">9946</td><td align="left"></td></tr></table>>]
9943 -> 9942[label=""]
9950 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 9950 and 9984"]
9950 -> 9985[label=""]
9986 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">9986</td><td align="left">j = 0;</td></tr><tr><td align="right">9988</td><td align="left">while</td></tr></table>>]
9986 -> 9989[label=""]
10000 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 10000 and 10109"]
10000 -> 9999[label=""]
10111 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10111</td><td align="left">imax = 0;</td></tr><tr><td align="right">10112</td><td align="left">i = ((*nodelist)[inode]).first;</td></tr></table>>]
10111 -> 10113[label=""]
10117 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10117</td><td align="left">tmp___4 = imax;</td></tr><tr><td align="right">10118</td><td align="left">imax = imax + 1;</td></tr><tr><td align="right">10119</td><td align="left">(*atomall)[tmp___4] = ((*atomlist)[i]).who;</td></tr><tr><td align="right">10120</td><td align="left"></td></tr></table>>]
10117 -> 10114[label=""]
10127 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10127</td><td align="left">tmp___5 = imax;</td></tr><tr><td align="right">10128</td><td align="left">imax = imax + 1;</td></tr><tr><td align="right">10129</td><td align="left">(*atomall)[tmp___5] = ((*atomlist)[i]).who;</td></tr><tr><td align="right">10130</td><td align="left"></td></tr></table>>]
10127 -> 10126[label=""]
10134 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10134</td><td align="left">a2 = (*atomall)[i];</td></tr><tr><td align="right">10136</td><td align="left">j = i * 4;</td></tr><tr><td align="right">10137</td><td align="left">(*vector)[j] = (a2-&gt;px) - (a1-&gt;px);</td></tr><tr><td align="right">10138</td><td align="left">(*vector)[j + 1] = (a2-&gt;py) - (a1-&gt;py);</td></tr><tr><td align="right">10139</td><td align="left">(*vector)[j + 2] = (a2-&gt;pz) - (a1-&gt;pz);</td></tr><tr><td align="right">10140</td><td align="left">i = i + 1;</td></tr><tr><td align="right">10141</td><td align="left"></td></tr></table>>]
10134 -> 10133[label=""]
10144 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10144</td><td align="left">j = i * 4;</td></tr><tr><td align="right">10146</td><td align="left">(*vector)[j + 3] = sqrt(((((*vector)[j]) * ((*vector)[j])) + (((*vector)[j + 1]) * ((*vector)[j + 1]))) + (((*vector)[j + 2]) * ((*vector)[j + 2])));</td></tr><tr><td align="right">10147</td><td align="left">i = i + 1;</td></tr><tr><td align="right">10148</td><td align="left"></td></tr></table>>]
10144 -> 10143[label=""]
10151 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10151</td><td align="left">a2 = (*atomall)[i];</td></tr><tr><td align="right">10153</td><td align="left">j = 0;</td></tr><tr><td align="right">10154</td><td align="left">while</td></tr></table>>]
10151 -> 10155[label=""]
10221 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10221</td><td align="left">i = i + 1;</td></tr><tr><td align="right">10222</td><td align="left"></td></tr></table>>]
10221 -> 10150[label=""]
10171 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label="Long linear chain of edges between nodes 10171 and 10213"]
10171 -> 10163[label=""]
10214 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10214</td><td align="left">inclose = inclose + 1;</td></tr><tr><td align="right">10215</td><td align="left">(a1-&gt;close)[tmp___6] = (void *)((*atomall)[i]);</td></tr></table>>]
10214 -> 10216[label=""]
10224 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10224</td><td align="left">a1-&gt;py = ((a1-&gt;dy) * lambda) + (a1-&gt;y);</td></tr><tr><td align="right">10225</td><td align="left">a1-&gt;pz = ((a1-&gt;dz) * lambda) + (a1-&gt;z);</td></tr><tr><td align="right">10226</td><td align="left">ii = ii + 1;</td></tr><tr><td align="right">10227</td><td align="left"></td></tr></table>>]
10224 -> 9949[label=""]
10228 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">10228</td><td align="left">free((void *)atomlist);</td></tr><tr><td align="right">10229</td><td align="left">free((void *)nodelist);</td></tr><tr><td align="right">10230</td><td align="left">free((void *)vector);</td></tr><tr><td align="right">10231</td><td align="left">free((void *)atomall);</td></tr><tr><td align="right">10232</td><td align="left">return 1;</td></tr></table>>]
10228 -> 9527[label=""]
100612 [shape="component" label="get_f_variable"]
9655 -> 100612 [label="mmbox = get_f_variable(\"mmbox\");" fontname="Courier New"]
100612 -> 9656 [label="" fontname="Courier New"]
100613 [shape="component" label="get_f_variable"]
9656 -> 100613 [label="mxcut = get_f_variable(\"mxcut\");" fontname="Courier New"]
100613 -> 9657 [label="" fontname="Courier New"]
9657 -> 9658 [label="[!(mxcut < 0)]" fontname="Courier New"]
9657 -> 9659 [label="[mxcut < 0]" fontname="Courier New"]
100614 [shape="component" label="get_f_variable"]
9658 -> 100614 [label="dielectric = get_f_variable(\"dielec\");" fontname="Courier New"]
100614 -> 9661 [label="" fontname="Courier New"]
9661 -> 9662 [label="[!(dielectric <= 0)]" fontname="Courier New"]
9661 -> 9663 [label="[dielectric <= 0]" fontname="Courier New"]
9662 -> 9665 [label="dielectric = 332.17752 / dielectric;" fontname="Courier New"]
100615 [shape="component" label="a_number"]
9665 -> 100615 [label="i = a_number();" fontname="Courier New"]
100615 -> 9666 [label="" fontname="Courier New"]
9668 -> 9669 [label="[!(((unsigned int)vector) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
9668 -> 9670 [label="[((unsigned int)vector) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100616 [shape="component" label="aaerror"]
9670 -> 100616 [label="aaerror((char *)\"cannot allocate memory in mm_fv_update\n\");" fontname="Courier New"]
100616 -> 9671 [label="" fontname="Courier New"]
9669 -> 9673 [label="tmp___0 = malloc(((unsigned int)i) * (sizeof(ATOM *)));" fontname="Courier New"]
9674 -> 9675 [label="[!(((unsigned int)atomall) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
9674 -> 9676 [label="[((unsigned int)atomall) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100617 [shape="component" label="aaerror"]
9676 -> 100617 [label="aaerror((char *)\"cannot allocate memory in mm_fv_update\n\");" fontname="Courier New"]
100617 -> 9677 [label="" fontname="Courier New"]
9675 -> 9679 [label="tmp___1 = malloc(((unsigned int)i) * (sizeof(MMATOM )));" fontname="Courier New"]
9680 -> 9681 [label="[!(((unsigned int)atomlist) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
9680 -> 9682 [label="[((unsigned int)atomlist) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100618 [shape="component" label="aaerror"]
9682 -> 100618 [label="aaerror((char *)\"cannot allocate memory in mm_fv_update\n\");" fontname="Courier New"]
100618 -> 9683 [label="" fontname="Courier New"]
100619 [shape="component" label="a_number"]
9681 -> 100619 [label="imax = a_number();" fontname="Courier New"]
100619 -> 9685 [label="" fontname="Courier New"]
9688 -> 9690 [label="[!(i < imax)]" fontname="Courier New"]
9688 -> 9689 [label="[i < imax]" fontname="Courier New"]
100620 [shape="component" label="a_next"]
9689 -> 100620 [label="(*atomall)[i] = a_next(i);" fontname="Courier New"]
100620 -> 9691 [label="" fontname="Courier New"]
9690 -> 9694 [label="ii = 0;" fontname="Courier New"]
9695 -> 9697 [label="[!(ii < imax)]" fontname="Courier New"]
9695 -> 9696 [label="[ii < imax]" fontname="Courier New"]
9697 -> 9704 [label="xmax = -1.0E+11;" fontname="Courier New"]
9711 -> 9713 [label="[!(ii < imax)]" fontname="Courier New"]
9711 -> 9712 [label="[ii < imax]" fontname="Courier New"]
9714 -> 9715 [label="[!(xmax < ((*vector)[j]))]" fontname="Courier New"]
9714 -> 9716 [label="[xmax < ((*vector)[j])]" fontname="Courier New"]
9715 -> 9718 [label="[!(ymax < ((*vector)[j + 1]))]" fontname="Courier New"]
9715 -> 9719 [label="[ymax < ((*vector)[j + 1])]" fontname="Courier New"]
9718 -> 9721 [label="[!(zmax < ((*vector)[j + 2]))]" fontname="Courier New"]
9718 -> 9722 [label="[zmax < ((*vector)[j + 2])]" fontname="Courier New"]
9721 -> 9724 [label="[!(xmin > ((*vector)[j]))]" fontname="Courier New"]
9721 -> 9725 [label="[xmin > ((*vector)[j])]" fontname="Courier New"]
9724 -> 9727 [label="[!(ymin > ((*vector)[j + 1]))]" fontname="Courier New"]
9724 -> 9728 [label="[ymin > ((*vector)[j + 1])]" fontname="Courier New"]
9727 -> 9730 [label="[!(zmin > ((*vector)[j + 2]))]" fontname="Courier New"]
9727 -> 9731 [label="[zmin > ((*vector)[j + 2])]" fontname="Courier New"]
9730 -> 9733 [label="ii = ii + 1;" fontname="Courier New"]
9713 -> 9734 [label="nx = (int)(((xmax - xmin) / mmbox) + ((double)1));" fontname="Courier New"]
9738 -> 9739 [label="[!(((unsigned int)nodelist) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
9738 -> 9740 [label="[((unsigned int)nodelist) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100621 [shape="component" label="aaerror"]
9740 -> 100621 [label="aaerror((char *)\"cannot allocate node memory in mm_fv_update (doubling grid )\n\");" fontname="Courier New"]
100621 -> 9741 [label="" fontname="Courier New"]
100622 [shape="component" label="aaerror"]
9742 -> 100622 [label="aaerror(line);" fontname="Courier New"]
100622 -> 9743 [label="" fontname="Courier New"]
100623 [shape="component" label="aaerror"]
9744 -> 100623 [label="aaerror(line);" fontname="Courier New"]
100623 -> 9745 [label="" fontname="Courier New"]
100624 [shape="component" label="set_f_variable"]
9746 -> 100624 [label="set_f_variable((char *)\"mmbox\", mmbox);" fontname="Courier New"]
100624 -> 9747 [label="" fontname="Courier New"]
9752 -> 9753 [label="[!(((unsigned int)nodelist) == ((unsigned int)((void *)0)))]" fontname="Courier New"]
9752 -> 9754 [label="[((unsigned int)nodelist) == ((unsigned int)((void *)0))]" fontname="Courier New"]
100625 [shape="component" label="aaerror"]
9754 -> 100625 [label="aaerror((char *)\"cannot allocate node memory in mm_fv_update (cannot do it)\n\");" fontname="Courier New"]
100625 -> 9755 [label="" fontname="Courier New"]
9753 -> 9739 [label="" fontname="Courier New"]
9739 -> 9757 [label="ix = 0;" fontname="Courier New"]
9758 -> 9760 [label="[!(ix < nx)]" fontname="Courier New"]
9758 -> 9759 [label="[ix < nx]" fontname="Courier New"]
9762 -> 9764 [label="[!(iy < ny)]" fontname="Courier New"]
9762 -> 9763 [label="[iy < ny]" fontname="Courier New"]
9766 -> 9768 [label="[!(iz < nz)]" fontname="Courier New"]
9766 -> 9767 [label="[iz < nz]" fontname="Courier New"]
9768 -> 9774 [label="iy = iy + 1;" fontname="Courier New"]
9764 -> 9775 [label="ix = ix + 1;" fontname="Courier New"]
9760 -> 9776 [label="ii = 0;" fontname="Courier New"]
9777 -> 9779 [label="[!(ii < ((nx * ny) * nz))]" fontname="Courier New"]
9777 -> 9778 [label="[ii < ((nx * ny) * nz)]" fontname="Courier New"]
9779 -> 9808 [label="ii = 0;" fontname="Courier New"]
9809 -> 9811 [label="[!(ii < imax)]" fontname="Courier New"]
9809 -> 9810 [label="[ii < imax]" fontname="Courier New"]
9811 -> 9819 [label="inode = 0;" fontname="Courier New"]
9820 -> 9822 [label="[!(inode < ((nx * ny) * nz))]" fontname="Courier New"]
9820 -> 9821 [label="[inode < ((nx * ny) * nz)]" fontname="Courier New"]
9824 -> 9826 [label="[!(ii < imax)]" fontname="Courier New"]
9824 -> 9825 [label="[ii < imax]" fontname="Courier New"]
9825 -> 9827 [label="[!((((*atomlist)[ii]).which) == inode)]" fontname="Courier New"]
9825 -> 9828 [label="[(((*atomlist)[ii]).which) == inode]" fontname="Courier New"]
9826 -> 9835 [label="[!(ii != imax)]" fontname="Courier New"]
9826 -> 9836 [label="[ii != imax]" fontname="Courier New"]
9838 -> 9840 [label="[!(ii < imax)]" fontname="Courier New"]
9838 -> 9839 [label="[ii < imax]" fontname="Courier New"]
9839 -> 9841 [label="[!((((*atomlist)[ii]).which) == inode)]" fontname="Courier New"]
9839 -> 9842 [label="[(((*atomlist)[ii]).which) == inode]" fontname="Courier New"]
9841 -> 9883 [label="ii = ii + 1;" fontname="Courier New"]
9840 -> 9835 [label="" fontname="Courier New"]
9835 -> 9884 [label="inode = inode + 1;" fontname="Courier New"]
9827 -> 9834 [label="ii = ii + 1;" fontname="Courier New"]
9822 -> 9885 [label="k = dielectric * 0.5;" fontname="Courier New"]
9890 -> 9892 [label="[!(ii < ((nx * ny) * nz))]" fontname="Courier New"]
9890 -> 9891 [label="[ii < ((nx * ny) * nz)]" fontname="Courier New"]
9912 -> 9913 [label="[!((((*nodelist)[ii]).sa) != 0)]" fontname="Courier New"]
9912 -> 9914 [label="[(((*nodelist)[ii]).sa) != 0]" fontname="Courier New"]
9913 -> 9918 [label="((*nodelist)[ii]).xa = (((*nodelist)[ii]).xa) + (((*nodelist)[ii]).xc);" fontname="Courier New"]
9892 -> 9923 [label="ii = 0;" fontname="Courier New"]
9924 -> 9926 [label="[!(ii < jj)]" fontname="Courier New"]
9924 -> 9925 [label="[ii < jj]" fontname="Courier New"]
9942 -> 9944 [label="[!(j < 200)]" fontname="Courier New"]
9942 -> 9943 [label="[j < 200]" fontname="Courier New"]
9944 -> 9947 [label="ii = ii + 1;" fontname="Courier New"]
9926 -> 9948 [label="ii = 0;" fontname="Courier New"]
9949 -> 9951 [label="[!(ii < jj)]" fontname="Courier New"]
9949 -> 9950 [label="[ii < jj]" fontname="Courier New"]
9985 -> 9987 [label="[!(inode < ((nx * ny) * nz))]" fontname="Courier New"]
9985 -> 9986 [label="[inode < ((nx * ny) * nz)]" fontname="Courier New"]
9989 -> 9991 [label="[!(j < 27)]" fontname="Courier New"]
9989 -> 9990 [label="[j < 27]" fontname="Courier New"]
9990 -> 9992 [label="[!(inode == (naybor[j]))]" fontname="Courier New"]
9990 -> 9993 [label="[inode == (naybor[j])]" fontname="Courier New"]
9991 -> 9998 [label="[!(j == 27)]" fontname="Courier New"]
9991 -> 9997 [label="[j == 27]" fontname="Courier New"]
9997 -> 9999 [label="[!((((*nodelist)[inode]).innode) > 0)]" fontname="Courier New"]
9997 -> 10000 [label="[(((*nodelist)[inode]).innode) > 0]" fontname="Courier New"]
9999 -> 9996 [label="" fontname="Courier New"]
9996 -> 10223 [label="inode = inode + 1;" fontname="Courier New"]
9998 -> 10110 [label="[!((((*nodelist)[inode]).innode) > 0)]" fontname="Courier New"]
9998 -> 10111 [label="[(((*nodelist)[inode]).innode) > 0]" fontname="Courier New"]
10113 -> 10114 [label="[!((((*nodelist)[inode]).innode) > 0)]" fontname="Courier New"]
10113 -> 10115 [label="[(((*nodelist)[inode]).innode) > 0]" fontname="Courier New"]
10115 -> 10116 [label="[!((((*atomlist)[i]).who->serial) > (a1->serial))]" fontname="Courier New"]
10115 -> 10117 [label="[(((*atomlist)[i]).who->serial) > (a1->serial)]" fontname="Courier New"]
10114 -> 10121 [label="j = 1;" fontname="Courier New"]
10122 -> 10124 [label="[!(j < ((((*nodelist)[inode]).innode) - 1))]" fontname="Courier New"]
10122 -> 10123 [label="[j < ((((*nodelist)[inode]).innode) - 1)]" fontname="Courier New"]
10125 -> 10126 [label="[!((((*atomlist)[i]).who->serial) > (a1->serial))]" fontname="Courier New"]
10125 -> 10127 [label="[(((*atomlist)[i]).who->serial) > (a1->serial)]" fontname="Courier New"]
10126 -> 10131 [label="j = j + 1;" fontname="Courier New"]
10124 -> 10132 [label="i = 0;" fontname="Courier New"]
10133 -> 10135 [label="[!(i < imax)]" fontname="Courier New"]
10133 -> 10134 [label="[i < imax]" fontname="Courier New"]
10135 -> 10142 [label="i = 0;" fontname="Courier New"]
10143 -> 10145 [label="[!(i < imax)]" fontname="Courier New"]
10143 -> 10144 [label="[i < imax]" fontname="Courier New"]
10145 -> 10149 [label="i = 0;" fontname="Courier New"]
10150 -> 10152 [label="[!(i < imax)]" fontname="Courier New"]
10150 -> 10151 [label="[i < imax]" fontname="Courier New"]
10155 -> 10157 [label="[!(j < (a1->dontuse))]" fontname="Courier New"]
10155 -> 10156 [label="[j < (a1->dontuse)]" fontname="Courier New"]
10156 -> 10158 [label="[!(((unsigned int)a2) == ((unsigned int)((a1->excluded)[j])))]" fontname="Courier New"]
10156 -> 10159 [label="[((unsigned int)a2) == ((unsigned int)((a1->excluded)[j]))]" fontname="Courier New"]
10220 -> 10221 [label="j = j;" fontname="Courier New"]
10158 -> 10161 [label="j = j + 1;" fontname="Courier New"]
10157 -> 10162 [label="j = i * 4;" fontname="Courier New"]
10162 -> 10165 [label="[!(((*vector)[j + 3]) > mxcut)]" fontname="Courier New"]
10162 -> 10164 [label="[((*vector)[j + 3]) > mxcut]" fontname="Courier New"]
10170 -> 10171 [label="r0 = 1 / ((*vector)[j + 3]);" fontname="Courier New"]
10163 -> 10220 [label="Label: SKIPNEW" fontname="Courier New"]
10165 -> 10169 [label="[!(inclose > 200)]" fontname="Courier New"]
10165 -> 10168 [label="[inclose > 200]" fontname="Courier New"]
10169 -> 10214 [label="tmp___6 = inclose;" fontname="Courier New"]
10216 -> 10217 [label="[!(inclose == 200)]" fontname="Courier New"]
10216 -> 10218 [label="[inclose == 200]" fontname="Courier New"]
100626 [shape="component" label="aaerror"]
10218 -> 100626 [label="aaerror((char *)\" fv_update_nonbon> too many atoms increase NCLOSE or decrease mxcut\");" fontname="Courier New"]
100626 -> 10219 [label="" fontname="Courier New"]
10217 -> 10163 [label="" fontname="Courier New"]
10116 -> 10114 [label="" fontname="Courier New"]
9992 -> 9995 [label="j = j + 1;" fontname="Courier New"]
9987 -> 10224 [label="a1->px = ((a1->dx) * lambda) + (a1->x);" fontname="Courier New"]
100627 [shape="component" label="a_inactive_f_zero"]
9951 -> 100627 [label="a_inactive_f_zero();" fontname="Courier New"]
100627 -> 10228 [label="" fontname="Courier New"]
9671 -> 9527 [label="return 0;" fontname="Courier New"]
9673 -> 9674 [label="atomall = (ATOM *(*)[])tmp___0;" fontname="Courier New"]
9677 -> 9527 [label="return 0;" fontname="Courier New"]
9679 -> 9680 [label="atomlist = (MMATOM (*)[])tmp___1;" fontname="Courier New"]
9683 -> 9527 [label="return 0;" fontname="Courier New"]
9694 -> 9695 [label="while" fontname="Courier New"]
9712 -> 9714 [label="j = ii * 4;" fontname="Courier New"]
9733 -> 9711 [label="" fontname="Courier New"]
9741 -> 9742 [label="sprintf(line, \"mmbox %f nx %d ny %d nz %d \", mmbox, nx, ny, nz);" fontname="Courier New"]
9743 -> 9744 [label="sprintf(line, \" xmin xmax %f %f ymin ymax %f %f zmin zmax %f %f\", xmin, xmax, ymin, ymax, zmin, zmax);" fontname="Courier New"]
9745 -> 9746 [label="mmbox = mmbox * ((double)2);" fontname="Courier New"]
9755 -> 9527 [label="return 0;" fontname="Courier New"]
9757 -> 9758 [label="while" fontname="Courier New"]
9774 -> 9762 [label="" fontname="Courier New"]
9775 -> 9758 [label="" fontname="Courier New"]
9776 -> 9777 [label="while" fontname="Courier New"]
9808 -> 9809 [label="while" fontname="Courier New"]
9819 -> 9820 [label="while" fontname="Courier New"]
9883 -> 9838 [label="" fontname="Courier New"]
9884 -> 9820 [label="" fontname="Courier New"]
9834 -> 9824 [label="" fontname="Courier New"]
9923 -> 9924 [label="while" fontname="Courier New"]
9947 -> 9924 [label="" fontname="Courier New"]
9948 -> 9949 [label="while" fontname="Courier New"]
9993 -> 9991 [label="break" fontname="Courier New"]
10223 -> 9985 [label="" fontname="Courier New"]
10121 -> 10122 [label="while" fontname="Courier New"]
10123 -> 10125 [label="i = ((*atomlist)[i]).next;" fontname="Courier New"]
10131 -> 10122 [label="" fontname="Courier New"]
10132 -> 10133 [label="while" fontname="Courier New"]
10142 -> 10143 [label="while" fontname="Courier New"]
10149 -> 10150 [label="while" fontname="Courier New"]
10159 -> 10220 [label="Goto: SKIPNEW" fontname="Courier New"]
10161 -> 10155 [label="" fontname="Courier New"]
10164 -> 10170 [label="Goto: _L" fontname="Courier New"]
10168 -> 10170 [label="Label: _L" fontname="Courier New"]
10219 -> 10163 [label="" fontname="Courier New"]
10152 -> 9996 [label="" fontname="Courier New"]
10110 -> 9996 [label="" fontname="Courier New"]
9995 -> 9989 [label="" fontname="Courier New"]
}