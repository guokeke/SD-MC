digraph flow_cost {
366 [shape="doublecircle"]
369 [shape="circle"]
368 [shape="diamond"]
372 [shape="circle"]
371 [shape="circle"]
370 [shape="circle"]
367 [shape="circle"]
374 [shape="circle"]
375 [shape="circle"]
378 [shape="doublecircle"]
381 [shape="circle"]
380 [shape="circle"]
383 [shape="circle"]
385 [shape="doublecircle"]
388 [shape="circle"]
387 [shape="diamond"]
389 [shape="circle"]
390 [shape="diamond"]
391 [shape="circle"]
392 [shape="diamond"]
395 [shape="circle"]
394 [shape="circle"]
386 [shape="circle"]
398 [shape="circle"]
351 [shape="circle"]
352 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">352</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">353</td><td align="left">arc_t *arc;</td></tr><tr><td align="right">355</td><td align="left">node_t *node;</td></tr><tr><td align="right">357</td><td align="left">void *stop;</td></tr><tr><td align="right">359</td><td align="left">long fleet = 0;</td></tr><tr><td align="right">361</td><td align="left">cost_t operational_cost = 0;</td></tr><tr><td align="right">363</td><td align="left">stop = (void *)(net-&gt;stop_arcs);</td></tr><tr><td align="right">364</td><td align="left">for</td></tr><tr><td align="right">365</td><td align="left">arc = net-&gt;arcs;</td></tr></table>>]
352 -> 366[label=""]
371 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">371</td><td align="left">arc-&gt;flow = (flow_t )1;</td></tr><tr><td align="right">373</td><td align="left"></td></tr></table>>]
371 -> 370[label=""]
375 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">375</td><td align="left">for</td></tr><tr><td align="right">376</td><td align="left">node = net-&gt;nodes;</td></tr><tr><td align="right">377</td><td align="left">node = node + 1;</td></tr></table>>]
375 -> 378[label=""]
380 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">380</td><td align="left">node-&gt;basic_arc-&gt;flow = node-&gt;flow;</td></tr><tr><td align="right">382</td><td align="left"></td></tr><tr><td align="right">379</td><td align="left">node = node + 1;</td></tr></table>>]
380 -> 378[label=""]
383 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">383</td><td align="left">for</td></tr><tr><td align="right">384</td><td align="left">arc = net-&gt;arcs;</td></tr></table>>]
383 -> 385[label=""]
394 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">394</td><td align="left">operational_cost = operational_cost + ((arc-&gt;cost) - (net-&gt;bigM));</td></tr><tr><td align="right">396</td><td align="left">fleet = fleet + 1L;</td></tr><tr><td align="right">397</td><td align="left"></td></tr></table>>]
394 -> 389[label=""]
366 -> 369 [label="[!(arc != ((arc_t *)stop))]" fontname="Courier New"]
366 -> 368 [label="[arc != ((arc_t *)stop)]" fontname="Courier New"]
368 -> 372 [label="[!((arc->ident) == 2)]" fontname="Courier New"]
368 -> 371 [label="[(arc->ident) == 2]" fontname="Courier New"]
370 -> 367 [label="" fontname="Courier New"]
372 -> 374 [label="arc->flow = (flow_t )0;" fontname="Courier New"]
369 -> 375 [label="stop = (void *)(net->stop_nodes);" fontname="Courier New"]
378 -> 381 [label="[!(node != ((node_t *)stop))]" fontname="Courier New"]
378 -> 380 [label="[node != ((node_t *)stop)]" fontname="Courier New"]
381 -> 383 [label="stop = (void *)(net->stop_arcs);" fontname="Courier New"]
385 -> 388 [label="[!(arc != ((arc_t *)stop))]" fontname="Courier New"]
385 -> 387 [label="[arc != ((arc_t *)stop)]" fontname="Courier New"]
387 -> 389 [label="[!((arc->flow) != 0)]" fontname="Courier New"]
387 -> 390 [label="[(arc->flow) != 0]" fontname="Courier New"]
390 -> 391 [label="[!(!(((arc->tail->number) < 0) && ((arc->head->number) > 0)))]" fontname="Courier New"]
390 -> 392 [label="[!(((arc->tail->number) < 0) && ((arc->head->number) > 0))]" fontname="Courier New"]
392 -> 395 [label="[!(!(arc->tail->number))]" fontname="Courier New"]
392 -> 394 [label="[!(arc->tail->number)]" fontname="Courier New"]
389 -> 386 [label="" fontname="Courier New"]
395 -> 398 [label="operational_cost = operational_cost + (arc->cost);" fontname="Courier New"]
391 -> 389 [label="" fontname="Courier New"]
367 -> 366 [label="arc = arc + 1;" fontname="Courier New"]
374 -> 370 [label="" fontname="Courier New"]
386 -> 385 [label="arc = arc + 1;" fontname="Courier New"]
398 -> 389 [label="" fontname="Courier New"]
388 -> 351 [label="return (((double)fleet) * ((double)(net->bigM))) + ((double)operational_cost);" fontname="Courier New"]
}